name: Build

on:
  repository_dispatch:
    types: update-event
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  LANG: en_US.UTF-8
  JAVA_HOME: ${{ github.workspace }}/jdk
  MAVEN_ARGS: >-
    --file pom.xml --show-version --batch-mode --errors --lax-checksums -DskipTests=true

jobs:
  cli-args:
    name: Cmd arguments
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          # Disabling shallow clone for improving relevancy of SonarQube reporting
          fetch-depth: 0

      - name: Validate arguments
        uses: ./.github/workflows/args
        env:
          TEST_NAME: "Mona"

  commit-check:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        java: [ '8' ]
        architecture: [ 'x64', 'x86' ]
        os: [ ubuntu-latest, windows-latest ]
        machines: [ 1, 2 ]
    name: Commit Check with JDK ${{ matrix.java }} on ${{ matrix.architecture }} with ${{ matrix.os }} on ${{ matrix.machine }}
    steps:
      - name: commit check
        uses: gsactions/commit-message-checker@v1
        with:
          pattern: |
            ^(.*):\s*(.*)$
          error: 'Commit must begin with <scope>: <subject>'
          flags: 'gm'
          excludeTitle: true
          excludeDescription: true
          checkAllCommitMessages: true
          accessToken: ${{ secrets.GITHUB_TOKEN }}

  non_module_java:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        java: [ '8' ]
        architecture: [ 'x64', 'x86' ]
        os: [ ubuntu-latest, windows-latest ]
    name: Build with JDK ${{ matrix.java }} on ${{ matrix.architecture }} with ${{ matrix.os }}
    steps:
      - name: Prepare git
        run: git config --global core.autocrlf false

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 2

      - name: Prepare repository
        run: git fetch --unshallow --tags

      # install a specific version of Node using
      # https://github.com/actions/setup-node
      - name: Use Node.js v12
        uses: actions/setup-node@v1
        with:
          node-version: 12

      # just so we learn about available environment variables GitHub provides
      - name: Print env variables
        run: |
          npm i -g @bahmutov/print-env
          print-env GITHUB

      - name: Setup JDK ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-package: jdk
          java-version: ${{ matrix.java }}
          architecture: ${{ matrix.architecture }}

      - name: Confirm Java Version
        shell: bash
        run: javac -version

      - name: Cache Maven repository
        uses: actions/cache@v2.1.3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-${{ matrix.java }}-maven-${{ hashFiles('**/*pom*.xml') }}
          restore-keys: ${{ runner.os }}-${{ matrix.java }}-maven-

      - name: Build with Maven
        timeout-minutes: 20
        if: contains(matrix.os, 'win') == false
        run: |
          chmod +x ./mvnw
          ./mvnw clean package $MAVEN_ARGS -P"test-jar","dev"

      - name: Build with Maven
        timeout-minutes: 20
        if: contains(matrix.os, 'win') == true
        run: |
          ./mvnw clean package %MAVEN_ARGS% -P"test-jar","dev"

  module_java:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        java: [ '11', '12', '13', '14', '15-ea', '16-ea' ]
        architecture: [ 'x64', 'x86' ]
        os: [ ubuntu-latest, windows-latest ]
    name: Build with JDK ${{ matrix.java }} on ${{ matrix.architecture }} with ${{ matrix.os }}
    steps:
      - name: Prepare git
        run: git config --global core.autocrlf false

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 2

      - name: Prepare repository
        run: git fetch --unshallow --tags

      - name: Setup JDK ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-package: jdk
          java-version: ${{ matrix.java }}
          architecture: ${{ matrix.architecture }}

      - name: Confirm Java Version
        shell: bash
        run: javac -version

      - name: Cache Maven repository
        uses: actions/cache@v2.1.3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-${{ matrix.java }}-maven-${{ hashFiles('**/*pom*.xml') }}
          restore-keys: ${{ runner.os }}-${{ matrix.java }}-maven-

      - name: Build with Maven
        timeout-minutes: 20
        if: contains(matrix.os, 'win') == false
        run: |
          $JAVA_HOME/bin/java -version
          chmod +x ./mvnw
          ./mvnw clean package $MAVEN_ARGS -P"test-jar","dev"

      - name: Build with Maven
        timeout-minutes: 20
        if: contains(matrix.os, 'win') == true
        run: |
          ./mvnw clean package %MAVEN_ARGS% -P"test-jar","dev"
