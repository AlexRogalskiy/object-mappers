<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.nullables.api.playground</groupId>
    <artifactId>objectmappers-parent</artifactId>
    <version>1.0.0</version>
    <packaging>pom</packaging>

    <name>io.nullables.api.playground.objectmappers</name>
    <description>Parent POM for Object Mappers Playground</description>
    <url>https://github.com/AlexRogalskiy/object-mappers-playground</url>
    <inceptionYear>2020</inceptionYear>

    <organization>
        <name>Nullables.io (RU)</name>
        <url>https://nullables.io/</url>
    </organization>

    <licenses>
        <license>
            <name>The GNU General Public License, Version 3.0</name>
            <url>https://www.gnu.org/licenses/gpl-3.0.html</url>
            <distribution>repo</distribution>
            <comments>GNU General Public License v3.0</comments>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>alexander.rogalskiy</id>
            <name>Alexander Rogalskiy</name>
            <email>alexander.rogalskiy@yandex.ru</email>
            <url>http://github.com/AlexRogalskiy</url>
            <organization>gkomega, Ltd.</organization>
            <organizationUrl>https://nullables.io/</organizationUrl>
            <roles>
                <role>developer</role>
                <role>architect</role>
            </roles>
            <timezone>+3</timezone>
            <properties>
                <github>https://github.com/AlexRogalskiy</github>
            </properties>
        </developer>
    </developers>

    <contributors>
        <contributor>
            <name>Alexander Rogalskiy</name>
            <email>alexander.rogalskiy@yandex.ru</email>
            <url>http://github.com/AlexRogalskiy</url>
            <organization>gkomega, Ltd.</organization>
            <organizationUrl>https://nullables.io/</organizationUrl>
            <roles>
                <role>developer</role>
                <role>architect</role>
            </roles>
            <timezone>+3</timezone>
            <properties>
                <github>https://github.com/AlexRogalskiy</github>
            </properties>
        </contributor>
    </contributors>

    <issueManagement>
        <system>GitHub Issue</system>
        <url>https://github.com/AlexRogalskiy/object-mappers-playground/issues</url>
    </issueManagement>

    <ciManagement>
        <system>GitHub CI</system>
        <url>https://github.com/AlexRogalskiy/object-mappers-playground/actions</url>
        <notifiers>
            <notifier>
                <type>mail</type>
                <sendOnError>true</sendOnError>
                <sendOnFailure>true</sendOnFailure>
                <sendOnSuccess>false</sendOnSuccess>
                <sendOnWarning>false</sendOnWarning>
                <configuration>
                    <address>github-actions@nullables.io</address>
                </configuration>
            </notifier>
        </notifiers>
    </ciManagement>

    <distributionManagement>
        <site>
            <id>GitHub</id>
            <name>GitHub Distribution</name>
            <url>scm:git:git@github.com/AlexRogalskiy/object-mappers-playground.git</url>
        </site>
        <repository>
            <id>github</id>
            <name>GitHub Apache Maven Packages</name>
            <url>https://maven.pkg.github.com/AlexRogalskiy/object-mappers-playground</url>
        </repository>
    </distributionManagement>

    <modules>
        <module>modules/objectmappers-beancp</module>
        <module>modules/objectmappers-beanmapper</module>
        <module>modules/objectmappers-beanutils</module>
        <module>modules/objectmappers-bull</module>
        <module>modules/objectmappers-commons</module>
        <module>modules/objectmappers-datus</module>
        <module>modules/objectmappers-docs</module>
        <module>modules/objectmappers-doov</module>
        <module>modules/objectmappers-dozer</module>
        <module>modules/objectmappers-jmapper</module>
        <module>modules/objectmappers-mapstruct</module>
        <module>modules/objectmappers-modelmapper</module>
        <module>modules/objectmappers-moo</module>
        <module>modules/objectmappers-orika</module>
        <module>modules/objectmappers-remap</module>
        <module>modules/objectmappers-selma</module>
        <module>modules/objectmappers-smooks</module>
        <module>modules/objectmappers-scalaflow</module>
        <module>modules/objectmappers-testflow</module>
        <module>modules/objectmappers-all</module>
        <module>modules/objectmappers-it</module>
    </modules>

    <properties>
        <java.version>1.8</java.version>

        <maven.url>localhost</maven.url>
        <maven.version>3.6.0</maven.version>

        <maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm:ssX</maven.build.timestamp.format>
        <maven.compiler.showDeprecation>true</maven.compiler.showDeprecation>
        <maven.compiler.showWarnings>true</maven.compiler.showWarnings>
        <maven.multiModuleProjectDirectory>./</maven.multiModuleProjectDirectory>

        <sourceJavaDirectory>${project.build.sourceDirectory}</sourceJavaDirectory>
        <sourceJavaTestDirectory>${project.build.testSourceDirectory}</sourceJavaTestDirectory>
        <sourceKotlinDirectory>${project.basedir}/src/main/kotlin</sourceKotlinDirectory>
        <sourceKotlinTestDirectory>${project.basedir}/src/test/kotlin</sourceKotlinTestDirectory>
        <sourceResourceDirectory>${project.basedir}/src/main/resources</sourceResourceDirectory>
        <sourceResourceTestDirectory>${project.basedir}/src/test/resources</sourceResourceTestDirectory>

        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.compiler.testSource>${java.version}</maven.compiler.testSource>
        <maven.compiler.testTarget>${java.version}</maven.compiler.testTarget>

        <project.build.outputEncoding>UTF-8</project.build.outputEncoding>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <compile-tests.skip>false</compile-tests.skip>
        <enforce.java.skip>false</enforce.java.skip>
        <enforce.banned.skip>false</enforce.banned.skip>
        <enforce.maven.skip>false</enforce.maven.skip>
        <enforce.snapshots.skip>false</enforce.snapshots.skip>
        <enforce.plugin.skip>false</enforce.plugin.skip>
        <enforce.deps.skip>false</enforce.deps.skip>
        <enforce.repository.skip>false</enforce.repository.skip>
        <enforce.vars.skip>false</enforce.vars.skip>
        <enforce.pom-enforcers.skip>false</enforce.pom-enforcers.skip>
        <enforce.format.skip>false</enforce.format.skip>
        <enforce.jkd8.skip>false</enforce.jkd8.skip>
        <enforce.duplicate.skip>false</enforce.duplicate.skip>
        <enforce.test.skip>false</enforce.test.skip>
        <package-tests.skip>true</package-tests.skip>
        <copy-dependencies.skip>false</copy-dependencies.skip>
        <assembly.skip>false</assembly.skip>

        <failIfNoTests>false</failIfNoTests>
        <skipTests>false</skipTests>

        <logback.version>1.2.3</logback.version>
        <logback-contrib.version>0.1.5</logback-contrib.version>
        <lombok.version>1.18.16</lombok.version>
        <commons-lang3.version>3.11</commons-lang3.version>
        <guava.version>30.0-jre</guava.version>
        <pedantic-enforcers.version>2.0.0</pedantic-enforcers.version>
        <pomchecker-enforcer-rules.version>1.1.0</pomchecker-enforcer-rules.version>

        <junit-jupiter.version>5.7.0</junit-jupiter.version>
        <junit-platform.version>1.7.0</junit-platform.version>
        <mockito-junit-jupiter.version>3.6.28</mockito-junit-jupiter.version>
        <mockito.version>3.6.28</mockito.version>
        <assertj.version>3.23.1</assertj.version>
        <hamcrest.version>2.2</hamcrest.version>

        <jacoco-check.skip>false</jacoco-check.skip>
        <jacoco-rule.line.length>100</jacoco-rule.line.length>
        <jacoco.branches.coverage.percentage.minimum>0.65</jacoco.branches.coverage.percentage.minimum>
        <jacoco.classes.missed.minimum>15</jacoco.classes.missed.minimum>
        <jacoco.complexities.coverage.percentage.minimum>0.57</jacoco.complexities.coverage.percentage.minimum>
        <jacoco.coverage.exclusions>**/application/config/*</jacoco.coverage.exclusions>
        <jacoco.instructions.coverage.percentage.minimum>0.61</jacoco.instructions.coverage.percentage.minimum>
        <jacoco.lines.coverage.percentage.minimum>0.65</jacoco.lines.coverage.percentage.minimum>
        <jacoco.methods.coverage.percentage.minimum>0.57</jacoco.methods.coverage.percentage.minimum>

        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.language>java</sonar.language>

        <javadocExecutable>${java.home}/bin/javadoc</javadocExecutable>

        <!-- maven extensions -->
        <maven-buildtime-extension.version>3.0.3</maven-buildtime-extension.version>
        <maven-os-extension.version>1.6.2</maven-os-extension.version>

        <!-- maven plugins -->
        <maven-clover-plugin.version>4.1.2</maven-clover-plugin.version>
        <maven-exec-plugin.version>3.0.0</maven-exec-plugin.version>
        <maven-directory-plugin.version>0.3.1</maven-directory-plugin.version>
        <maven-taglist-plugin.version>2.4</maven-taglist-plugin.version>
        <maven-fizzed-plugin.version>1.0.6</maven-fizzed-plugin.version>
        <maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
        <maven-site-plugin.version>3.9.1</maven-site-plugin.version>
        <maven-jxr-plugin.version>3.0.0</maven-jxr-plugin.version>
        <maven-jdepend-plugin.version>2.0</maven-jdepend-plugin.version>
        <maven-jib-plugin.version>3.0.0</maven-jib-plugin.version>
        <maven-proguard-plugin.version>2.3.1</maven-proguard-plugin.version>
        <maven-spotless-plugin.version>2.7.0</maven-spotless-plugin.version>
        <maven-dependency-plugin.version>3.1.2</maven-dependency-plugin.version>
        <maven-enforcer-plugin.version>3.0.0-M3</maven-enforcer-plugin.version>
        <maven-versions-plugin.version>2.8.1</maven-versions-plugin.version>
        <maven-checksum-plugin.version>1.8</maven-checksum-plugin.version>
        <maven-clirr-plugin.version>2.8</maven-clirr-plugin.version>
        <maven-help-plugin.version>3.2.0</maven-help-plugin.version>
        <maven-takari-lifecycle-plugin.version>2.0.0</maven-takari-lifecycle-plugin.version>
        <maven-buildnumber-plugin.version>1.4</maven-buildnumber-plugin.version>
        <maven-build-helper-plugin.version>3.2.0</maven-build-helper-plugin.version>
        <maven-sonar-plugin.version>3.7.0.1746</maven-sonar-plugin.version>
        <maven-sonar-packaging-plugin.version>1.20.0.405</maven-sonar-packaging-plugin.version>
        <maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
        <maven-idea-plugin.version>2.2</maven-idea-plugin.version>
        <maven.moditect.plugin.version>1.0.0.RC1</maven.moditect.plugin.version>
        <maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>
        <maven-appassembler-plugin.version>2.1.0</maven-appassembler-plugin.version>
        <maven-changes-plugin.version>2.12.1</maven-changes-plugin.version>
        <maven-changelog-plugin.version>2.3</maven-changelog-plugin.version>
        <maven-plugin-plugin.version>3.6.0</maven-plugin-plugin.version>
        <maven-project-info-reports-plugin.version>3.1.1</maven-project-info-reports-plugin.version>
        <maven-assembly-plugin.version>3.3.0</maven-assembly-plugin.version>
        <maven-pmd-plugin.version>3.14.0</maven-pmd-plugin.version>
        <maven-checkstyle-plugin.version>3.1.1</maven-checkstyle-plugin.version>
        <maven-formatter-plugin.version>2.15.0</maven-formatter-plugin.version>
        <maven-impsort-plugin.version>1.4.1</maven-impsort-plugin.version>
        <maven-fmt-plugin.version>2.10</maven-fmt-plugin.version>
        <maven-dependency-check-plugin.version>6.0.3</maven-dependency-check-plugin.version>
        <maven-antrun-plugin.version>3.0.0</maven-antrun-plugin.version>
        <maven-git-commit-id-plugin.version>4.0.3</maven-git-commit-id-plugin.version>
        <maven-findbugs-plugin.version>3.0.5</maven-findbugs-plugin.version>
        <maven-spotbugs-plugin.version>4.2.3</maven-spotbugs-plugin.version>
        <maven-qulice-plugin.version>0.18.19</maven-qulice-plugin.version>
        <maven-sortpom-plugin.version>2.12.0</maven-sortpom-plugin.version>
        <maven-flatten-plugin.version>1.2.5</maven-flatten-plugin.version>
        <maven-xml-plugin.version>1.0.2</maven-xml-plugin.version>
        <maven-javadoc-plugin.version>3.2.0</maven-javadoc-plugin.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-pitest-plugin.version>1.5.2</maven-pitest-plugin.version>
        <maven-pitest-junit5-plugin.version>0.12</maven-pitest-junit5-plugin.version>
        <maven-surefire-plugin.version>2.19.1</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>3.0.0-M3</maven-failsafe-plugin.version>
        <maven-surefire-report-plugin.version>3.0.0-M5</maven-surefire-report-plugin.version>
        <maven-cobertura-plugin.version>2.7</maven-cobertura-plugin.version>
        <maven-jacoco-plugin.version>0.8.6</maven-jacoco-plugin.version>
        <maven-btrace-plugin.version>2.0.0</maven-btrace-plugin.version>
        <maven-revapi-plugin.version>0.14.3</maven-revapi-plugin.version>
        <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
        <maven-toolchain-plugin.version>3.0.0</maven-toolchain-plugin.version>
        <maven-coveralls-plugin.version>4.3.0</maven-coveralls-plugin.version>
        <maven-shade-plugin.version>3.2.4</maven-shade-plugin.version>
        <maven-processor-plugin.version>4.4</maven-processor-plugin.version>
        <maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
        <maven-jarsigner-plugin.version>3.0.0</maven-jarsigner-plugin.version>
        <maven-forbiddenapis-plugin.version>3.1</maven-forbiddenapis-plugin.version>
        <maven-deploy-plugin.version>3.0.0-M1</maven-deploy-plugin.version>
        <maven-release-plugin.version>3.0.0-M1</maven-release-plugin.version>
        <maven-urm-plugin.version>2.0.0</maven-urm-plugin.version>
        <maven-license-plugin.version>2.0.0</maven-license-plugin.version>
        <maven-jvcn-plugin.version>0.0.1</maven-jvcn-plugin.version>
        <maven-groovy-plugin.version>2.1.1</maven-groovy-plugin.version>
        <maven-rat-plugin.version>0.13</maven-rat-plugin.version>
        <maven-lombok-plugin.version>1.18.16.0</maven-lombok-plugin.version>
        <maven-dokka-plugin.version>1.4.10.2</maven-dokka-plugin.version>
        <maven-versionizer-plugin.version>1.0.6</maven-versionizer-plugin.version>
        <maven-heroku-plugin.version>3.0.4</maven-heroku-plugin.version>
        <maven-sundr-plugin.version>0.23.1</maven-sundr-plugin.version>
        <maven-duplicate-finder-plugin.version>1.0.9</maven-duplicate-finder-plugin.version>
        <maven-modernizer-plugin.version>2.1.0</maven-modernizer-plugin.version>
        <maven-qameta-allure-plugin.version>2.10.0</maven-qameta-allure-plugin.version>
        <maven-asciidoctor-plugin.version>2.2.2</maven-asciidoctor-plugin.version>
        <maven-editorconfig-plugin.version>0.1.1</maven-editorconfig-plugin.version>
        <maven-nexus-staging-plugin.version>1.6.8</maven-nexus-staging-plugin.version>
        <maven-scm-provider-gitexe.version>1.11.2</maven-scm-provider-gitexe.version>
        <maven-violations-plugin.version>1.48</maven-violations-plugin.version>
        <maven-gitflow-incremental-builder-plugin.version>3.14.3</maven-gitflow-incremental-builder-plugin.version>
    </properties>

    <scm>
        <connection>
            scm:git:git@github.com/AlexRogalskiy/object-mappers-playground.git
        </connection>
        <developerConnection>
            scm:git:git@github.com:/AlexRogalskiy/object-mappers-playground.git
        </developerConnection>
        <url>
            git://github.com/AlexRogalskiy/object-mappers-playground
        </url>
        <tag>HEAD</tag>
    </scm>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit-jupiter.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Lombok library dependencies -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>

        <!-- Apache commons library dependencies -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>

        <!-- Guava library dependencies -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

        <!-- Logback library dependencies -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>edu.washington.cs.types.checker</groupId>
                    <artifactId>checker-framework</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>edu.washington.cs.types.checker</groupId>
                    <artifactId>checker-framework</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback.contrib</groupId>
            <artifactId>logback-jackson</artifactId>
            <version>${logback-contrib.version}</version>
        </dependency>

        <!-- AssertJ test library dependencies -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Hamcrest test library dependencies -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <version>${hamcrest.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- JUnit test library dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-migrationsupport</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-commons</artifactId>
            <version>${junit-platform.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-console</artifactId>
            <version>${junit-platform.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-engine</artifactId>
            <version>${junit-platform.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-launcher</artifactId>
            <version>${junit-platform.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-runner</artifactId>
            <version>${junit-platform.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Mockito test library dependencies -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${mockito-junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <directory>${maven.multiModuleProjectDirectory}/.build/bin/${project.name}</directory>

        <extensions>
            <extension>
                <groupId>co.leantechniques</groupId>
                <artifactId>maven-buildtime-extension</artifactId>
                <version>${maven-buildtime-extension.version}</version>
            </extension>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>${maven-os-extension.version}</version>
            </extension>
        </extensions>

        <plugins>
            <plugin>
                <groupId>org.commonjava.maven.plugins</groupId>
                <artifactId>directory-maven-plugin</artifactId>
                <version>${maven-directory-plugin.version}</version>
                <executions>
                    <execution>
                        <id>directories</id>
                        <goals>
                            <goal>highest-basedir</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <property>main.basedir</property>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.atlassian.maven.plugins</groupId>
                <artifactId>clover-maven-plugin</artifactId>
                <version>${maven-clover-plugin.version}</version>
                <configuration>
                    <alwaysReport>true</alwaysReport>
                    <generatePdf>true</generatePdf>
                    <generateJson>true</generateJson>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${maven-exec-plugin.version}</version>
                <executions>
                    <execution>
                        <id>submodule update</id>
                        <phase>initialize</phase>
                        <inherited>false</inherited>
                        <configuration>
                            <executable>git</executable>
                            <arguments>
                                <argument>submodule</argument>
                                <argument>update</argument>
                                <argument>--init</argument>
                                <argument>--recursive</argument>
                            </arguments>
                        </configuration>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>taglist-maven-plugin</artifactId>
                <version>${maven-taglist-plugin.version}</version>
                <configuration>
                    <encoding>${project.build.outputEncoding}</encoding>
                    <tags>
                        <tag>FIXME</tag>
                        <tag>Fixme</tag>
                        <tag>fixme</tag>
                        <tag>TODO</tag>
                        <tag>todo</tag>
                        <tag>Todo</tag>
                        <tag>@todo</tag>
                        <tag>@deprecated</tag>
                    </tags>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.fizzed</groupId>
                <artifactId>fizzed-watcher-maven-plugin</artifactId>
                <version>${maven-fizzed-plugin.version}</version>
                <configuration>
                    <touchFile>${project.build.directory}/classes/watcher.txt</touchFile>
                    <watches>
                        <watch>
                            <directory>${maven.multiModuleProjectDirectory}/modules/</directory>
                        </watch>
                    </watches>
                    <goals>
                        <goal>compile</goal>
                        <goal>process-classes</goal>
                    </goals>
                    <profiles>
                        <profile>optional-profile-to-activate</profile>
                    </profiles>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${maven-clean-plugin.version}</version>
                <configuration>
                    <excludeDefaultDirectories>true</excludeDefaultDirectories>
                    <followSymLinks>false</followSymLinks>
                    <filesets>
                        <fileset>
                            <directory>${project.build.directory}</directory>
                        </fileset>
                        <fileset>
                            <directory>${project.basedir}/src/main/generated-sources</directory>
                        </fileset>
                        <fileset>
                            <directory>${project.basedir}/.log</directory>
                        </fileset>
                    </filesets>
                </configuration>
                <executions>
                    <execution>
                        <id>clean-generated-sources</id>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <phase>clean</phase>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven-dependency-plugin.version}</version>
                <configuration>
                    <outputDirectory>${project.build.directory}/lib/</outputDirectory>
                    <includeScope>runtime</includeScope>
                    <overWriteReleases>false</overWriteReleases>
                    <overWriteSnapshots>false</overWriteSnapshots>
                    <overWriteIfNewer>true</overWriteIfNewer>
                    <excludeTransitive>true</excludeTransitive>
                    <prependGroupId>false</prependGroupId>
                    <useBaseVersion>false</useBaseVersion>
                    <failOnMissingClassifierArtifact>false</failOnMissingClassifierArtifact>
                </configuration>
                <executions>
                    <execution>
                        <id>analyze</id>
                        <goals>
                            <goal>analyze-only</goal>
                        </goals>
                        <configuration>
                            <failOnWarning>false</failOnWarning>
                            <ignoreNonCompile>true</ignoreNonCompile>
                            <outputXML>true</outputXML>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-test-classpath</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>build-classpath</goal>
                        </goals>
                        <configuration>
                            <includeScope>test</includeScope>
                            <outputProperty>test_classpath</outputProperty>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <skip>${copy-dependencies.skip}</skip>
                            <includeScope>runtime</includeScope>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <prependGroupId>true</prependGroupId>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                    <execution>
                        <id>set-classpath</id>
                        <phase>none</phase>
                        <goals>
                            <goal>build-classpath</goal>
                        </goals>
                        <configuration>
                            <!-- This includes dependencies with 'runtime' and 'compile' scopes; see the docs for includeScope for more details -->
                            <includeScope>runtime</includeScope>
                            <outputProperty>project.dist.classpath</outputProperty>
                            <attach>false</attach>
                            <prefix>lib</prefix>
                            <prependGroupId>true</prependGroupId>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${maven-enforcer-plugin.version}</version>
                <executions>
                    <execution>
                        <id>enforce-banned-dependencies</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <skip>${enforce.banned.skip}</skip>
                            <rules>
                                <bannedDependencies>
                                    <excludes>
                                        <!-- use org.apache.logging.log4j:log4j-slf4j-impl -->
                                        <exclude>ch.qos.logback:*</exclude>
                                        <!-- use org.apache.logging.log4j:log4j-1.2-api shim -->
                                        <exclude>log4j:log4j:*:jar:compile</exclude>
                                        <!-- use org.apache.logging.log4j:log4j-slf4j-impl -->
                                        <exclude>org.slf4j:slf4j-log4j12:*:jar:compile</exclude>
                                        <exclude>com.google.code.findbugs:annotations</exclude>
                                    </excludes>
                                    <searchTransitive>true</searchTransitive>
                                </bannedDependencies>
                            </rules>
                        </configuration>
                    </execution>
                    <execution>
                        <id>enforce-snapshots</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <skip>${enforce.snapshots.skip}</skip>
                            <rules>
                                <evaluateBeanshell>
                                    <condition>"${project.version}".endsWith("-SNAPSHOT")</condition>
                                    <message>Only build -SNAPSHOT versions.</message>
                                </evaluateBeanshell>
                            </rules>
                            <fail>true</fail>
                        </configuration>
                    </execution>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <skip>${enforce.maven.skip}</skip>
                            <rules>
                                <requireMavenVersion>
                                    <message>You are running an older version of Maven (requires at least Maven
                                        ${maven.version})
                                    </message>
                                    <version>${maven.version}</version>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                    <execution>
                        <id>enforce-java</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <skip>${enforce.java.skip}</skip>
                            <rules>
                                <requireJavaVersion>
                                    <message>You are running an older version of Java (requires at least JDK
                                        ${java.version})
                                    </message>
                                    <version>[${java.version},)</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                    <execution>
                        <id>enforce-plugin</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <skip>${enforce.plugin.skip}</skip>
                            <rules>
                                <requirePluginVersions>
                                    <message>You are running plugins with empty plugin versions</message>
                                    <banLatest>true</banLatest>
                                    <banRelease>true</banRelease>
                                    <banSnapshots>true</banSnapshots>
                                    <additionalPlugins>
                                        <additionalPlugin>org.apache.maven.plugins:maven-javadoc-plugin
                                        </additionalPlugin>
                                        <additionalPlugin>org.apache.maven.plugins:maven-release-plugin
                                        </additionalPlugin>
                                        <additionalPlugin>org.apache.maven.plugins:maven-source-plugin
                                        </additionalPlugin>
                                    </additionalPlugins>
                                </requirePluginVersions>
                                <bannedPlugins>
                                    <excludes>
                                        <exclude>org.apache.maven.plugins:maven-verifier-plugin</exclude>
                                    </excludes>
                                    <message>Please consider using the maven-invoker-plugin
                                        (http://maven.apache.org/plugins/maven-invoker-plugin/)!
                                    </message>
                                </bannedPlugins>
                            </rules>
                        </configuration>
                    </execution>
                    <execution>
                        <id>enforce-repository</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <skip>${enforce.repository.skip}</skip>
                            <rules>
                                <requireNoRepositories>
                                    <message>Best Practice is to never define repositories in pom.xml (use a repository
                                        manager instead)
                                    </message>
                                    <allowedPluginRepositories>
                                        <repository>github</repository>
                                        <repository>bintray</repository>
                                        <repository>maven</repository>
                                    </allowedPluginRepositories>
                                </requireNoRepositories>
                            </rules>
                        </configuration>
                    </execution>
                    <execution>
                        <id>enforce-vars</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <skip>${enforce.vars.skip}</skip>
                            <rules>
                                <requireEnvironmentVariable>
                                    <variableName>JAVA_HOME</variableName>
                                </requireEnvironmentVariable>
                            </rules>
                        </configuration>
                    </execution>
                    <execution>
                        <id>pedantic-pom-enforcers</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <skip>${enforce.pom-enforcers.skip}</skip>
                            <fail>false</fail>
                            <rules>
                                <dependencyConvergence/>
                                <compound
                                    implementation="com.github.ferstl.maven.pomenforcers.CompoundPedanticEnforcer">
                                    <enforcers>
                                        POM_SECTION_ORDER,DEPENDENCY_MANAGEMENT_ORDER,DEPENDENCY_ORDER,DEPENDENCY_CONFIGURATION,PLUGIN_MANAGEMENT_ORDER,PLUGIN_CONFIGURATION
                                    </enforcers>
                                    <dependencyManagementOrderBy>scope,groupId,artifactId</dependencyManagementOrderBy>
                                    <dependencyManagementScopePriorities>provided,compile,runtime,test,import
                                    </dependencyManagementScopePriorities>
                                    <dependenciesScopePriorities>import,provided,compile,runtime,test
                                    </dependenciesScopePriorities>
                                </compound>
                            </rules>
                        </configuration>
                    </execution>
                    <execution>
                        <id>enforce-deps</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <skip>${enforce.deps.skip}</skip>
                            <rules>
                                <requireReleaseDeps>
                                    <message>You are using snapshot dependency versions</message>
                                    <searchTransitive>true</searchTransitive>
                                    <onlyWhenRelease>true</onlyWhenRelease>
                                    <failWhenParentIsSnapshot>false</failWhenParentIsSnapshot>
                                </requireReleaseDeps>
                                <requireReleaseVersion>
                                    <message>You are using snapshot release versions</message>
                                </requireReleaseVersion>
                                <requireModuleConvergence/>
                                <requireUpperBoundDeps/>
                                <dependencyConvergence>
                                    <uniqueVersions>true</uniqueVersions>
                                </dependencyConvergence>
                                <evaluateBeanshell>
                                    <message>Maven module has to be in a "groupId" beginning with "org.neo4j"</message>
                                    <condition>{String s = "${project.groupId}"; s.startsWith("org.neo4j");}</condition>
                                </evaluateBeanshell>
                                <requireFilesDontExist>
                                    <message>You are not allowed to have classes in "com" package</message>
                                    <files>
                                        <file>${project.build.sourceDirectory}/com</file>
                                        <file>${project.build.testSourceDirectory}/com</file>
                                    </files>
                                </requireFilesDontExist>
                                <requireFilesDontExist>
                                    <files>
                                        <file>enterprise</file>
                                    </files>
                                </requireFilesDontExist>
                            </rules>
                        </configuration>
                    </execution>
                    <execution>
                        <id>enforce-jdk8-available</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <skip>${enforce.jkd8.skip}</skip>
                            <rules>
                                <evaluateBeanshell>
                                    <message>
                                        To create a release build of this project with JDK 11+ you need to provide
                                        a system property "jdk8.home" that can be used to access the rt.jar or
                                        classes.jar on Mac
                                    </message>
                                    <condition>
                                        System.getProperty("java.specification.version").contains(".") ||
                                        Integer.parseInt(System.getProperty("java.specification.version")) &lt; 11 ||
                                        new java.io.File(System.getProperty("jdk8.classes.jar.escaped")).exists()
                                    </condition>
                                </evaluateBeanshell>
                            </rules>
                        </configuration>
                    </execution>
                    <execution>
                        <id>enforce-test-resources</id>
                        <phase>test</phase>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <skip>${enforce.test.skip}</skip>
                            <rules>
                                <requireActiveProfile>
                                    <profiles>test</profiles>
                                </requireActiveProfile>
                            </rules>
                            <fail>true</fail>
                        </configuration>
                    </execution>
                    <execution>
                        <id>enforce-no-duplicate-dependencies</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <skip>${enforce.duplicate.skip}</skip>
                            <rules>
                                <banDuplicatePomDependencyVersions/>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.github.ferstl</groupId>
                        <artifactId>pedantic-pom-enforcers</artifactId>
                        <version>${pedantic-enforcers.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.kordamp.maven</groupId>
                        <artifactId>pomchecker-enforcer-rules</artifactId>
                        <version>${pomchecker-enforcer-rules.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>${maven-versions-plugin.version}</version>
                <configuration>
                    <generateBackupPoms>false</generateBackupPoms>
                </configuration>
                <executions>
                    <execution>
                        <id>show-plugin-versions</id>
                        <goals>
                            <goal>display-dependency-updates</goal>
                            <goal>display-plugin-updates</goal>
                        </goals>
                        <phase>site</phase>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-help-plugin</artifactId>
                <version>${maven-help-plugin.version}</version>
                <executions>
                    <execution>
                        <id>show-profiles</id>
                        <goals>
                            <goal>active-profiles</goal>
                        </goals>
                        <phase>compile</phase>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>io.takari.maven.plugins</groupId>
                <artifactId>takari-lifecycle-plugin</artifactId>
                <version>${maven-takari-lifecycle-plugin.version}</version>
                <extensions>true</extensions>
                <configuration>
                    <proc>proc</proc>
                    <compilerId>javac</compilerId>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>${maven-buildnumber-plugin.version}</version>
                <configuration>
                    <locale>en_US</locale>
                    <timestampFormat>{0,date,yyyy-MM-dd'T'HH:mm:ssX}</timestampFormat>
                    <revisionOnScmFailure>N/A</revisionOnScmFailure>
                    <format>{0} (revision {1} built on {2,date,yyyy-MM-dd HH:mm:ss})</format>
                    <items>
                        <item>${project.version}</item>
                        <item>scmVersion</item>
                        <item>timestamp</item>
                    </items>
                    <shortRevisionLength>6</shortRevisionLength>
                    <doCheck>false</doCheck>
                    <doUpdate>false</doUpdate>
                </configuration>
                <executions>
                    <execution>
                        <id>get-build-timestamp</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>create-timestamp</goal>
                        </goals>
                        <configuration>
                            <!-- Example date: Wed, 4 Jul 2001 12:08:56 -0700 -->
                            <timestampFormat>EEE, d MMM yyyy HH:mm:ss Z</timestampFormat>
                            <timestampPropertyName>build.datetime</timestampPropertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>get-scm-revision</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                        <configuration>
                            <doCheck>false</doCheck>
                            <doUpdate>false</doUpdate>
                            <revisionOnScmFailure>UNKNOWN</revisionOnScmFailure>
                            <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${maven-build-helper-plugin.version}</version>
                <executions>
                    <execution>
                        <id>generate-automatic-module-name</id>
                        <goals>
                            <goal>regex-property</goal>
                        </goals>
                        <configuration>
                            <name>automatic-module-name</name>
                            <value>${project.groupId}.${project.artifactId}</value>
                            <regex>[^a-zA-Z0-9]+</regex>
                            <replacement>.</replacement>
                        </configuration>
                    </execution>
                    <execution>
                        <id>set-product-filename-version</id>
                        <goals>
                            <goal>regex-property</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <name>product.filename.version</name>
                            <value>${project.groupId}-${project.artifactId}</value>
                            <regex>^(\d+(\.\d+)?).*?$</regex>
                            <replacement>$1</replacement>
                            <failIfNoMatch>false</failIfNoMatch>
                        </configuration>
                    </execution>
                    <execution>
                        <id>module-timestamp-property</id>
                        <goals>
                            <goal>timestamp-property</goal>
                        </goals>
                        <phase>validate</phase>
                        <configuration>
                            <name>module.build.timestamp</name>
                            <pattern>${maven.build.timestamp.format}</pattern>
                            <timeSource>current</timeSource>
                            <timeZone>Europe/Moscow</timeZone>
                        </configuration>
                    </execution>
                    <execution>
                        <id>local-timestamp-property</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>timestamp-property</goal>
                        </goals>
                        <configuration>
                            <name>local.build.timestamp</name>
                            <pattern>${maven.build.timestamp.format}</pattern>
                            <timeSource>current</timeSource>
                            <timeZone>Europe/Moscow</timeZone>
                        </configuration>
                    </execution>
                    <execution>
                        <id>get-cpu-count</id>
                        <goals>
                            <goal>cpu-count</goal>
                        </goals>
                        <configuration>
                            <!-- if not given, 'cpu.count' name is used -->
                            <cpuCount>my.cpu.count</cpuCount>
                        </configuration>
                    </execution>
                    <execution>
                        <id>remove-old-artifacts</id>
                        <phase>package</phase>
                        <goals>
                            <goal>remove-project-artifact</goal>
                        </goals>
                        <configuration>
                            <removeAll>true</removeAll>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/main/scala</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-test-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/test/scala</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-plugin.version}</version>
                <inherited>true</inherited>
                <configuration>
                    <forceCreation>true</forceCreation>
                    <archive>
                        <addMavenDescriptor>true</addMavenDescriptor>
                        <compress>true</compress>
                        <manifest>
                            <packageName>${project.groupId}</packageName>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <classpathLayoutType>custom</classpathLayoutType>
                            <customClasspathLayout>${project.artifactId}.${project.version}</customClasspathLayout>
                        </manifest>
                        <manifestEntries>
                            <Automatic-Module-Name>${automatic-module-name}</Automatic-Module-Name>
                            <Contains-Sources>java,class</Contains-Sources>
                            <Implementation-Vendor-Id>${project.groupId}</Implementation-Vendor-Id>
                            <Implementation-Title>${project.description}</Implementation-Title>
                            <Implementation-Version>${project.version}</Implementation-Version>
                            <Implementation-Build>${project.build.finalName}</Implementation-Build>
                            <Specification-Title>${project.description}</Specification-Title>
                            <Specification-Version>${project.version}</Specification-Version>
                            <Specification-Vendor>${project.organization.name} - ${project.organization.url}
                            </Specification-Vendor>
                            <Bundle-License>${project.organization.name}</Bundle-License>
                            <X-Builder>Maven ${maven.version}</X-Builder>
                            <X-Build-Time>${maven.build.timestamp}</X-Build-Time>
                            <X-Build-Os>${os.name}</X-Build-Os>
                        </manifestEntries>
                    </archive>
                    <outputDirectory>${project.build.directory}</outputDirectory>
                </configuration>
                <executions>
                    <execution>
                        <id>default-jar</id>
                        <configuration>
                            <archive>
                                <manifestEntries>
                                    <Multi-Release>true</Multi-Release>
                                </manifestEntries>
                            </archive>
                        </configuration>
                    </execution>
                    <execution>
                        <id>empty-javadoc-jar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <classifier>javadoc</classifier>
                            <classesDirectory>${project.basedir}/javadoc</classesDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>empty-sources-jar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <classifier>sources</classifier>
                            <classesDirectory>${project.basedir}/src</classesDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven-resources-plugin.version}</version>
                <inherited>true</inherited>
                <configuration>
                    <encoding>${project.build.outputEncoding}</encoding>
                </configuration>
                <executions>
                    <execution>
                        <id>copy-scenarios</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <phase>process-test-resources</phase>
                        <configuration>
                            <outputDirectory>${project.build.directory}/test-scenarios</outputDirectory>
                            <overwrite>true</overwrite>
                            <resources>
                                <resource>
                                    <filtering>false</filtering>
                                    <directory>${project.build.directory}/src/test/scenarios</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-idea-plugin</artifactId>
                <version>${maven-idea-plugin.version}</version>
                <configuration>
                    <downloadJavadocs>true</downloadJavadocs>
                    <downloadSources>true</downloadSources>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </releases>
            <snapshots>
                <enabled>false</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </snapshots>
            <id>central-1</id>
            <name>Maven Central Repository</name>
            <url>https://repo1.maven.org/maven2</url>
            <layout>default</layout>
        </repository>
        <repository>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </releases>
            <snapshots>
                <enabled>false</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </snapshots>
            <id>central</id>
            <name>Default Maven Repository</name>
            <url>https://repo.maven.apache.org/maven2</url>
            <layout>default</layout>
        </repository>
        <repository>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </snapshots>
            <id>sonatype-nexus-snapshots</id>
            <name>Sonatype Nexus Snapshots</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
            <layout>default</layout>
        </repository>
        <repository>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </releases>
            <snapshots>
                <enabled>false</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </snapshots>
            <id>projectlombok.org</id>
            <name>Lombok repository</name>
            <url>https://projectlombok.org/edge-releases</url>
            <layout>default</layout>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </snapshots>
            <id>central</id>
            <name>Maven Central Repository</name>
            <url>https://repo1.maven.org/maven2</url>
            <layout>default</layout>
        </pluginRepository>
        <pluginRepository>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </snapshots>
            <id>jcenter</id>
            <name>JCenter</name>
            <url>https://jcenter.bintray.com/</url>
            <layout>default</layout>
        </pluginRepository>
    </pluginRepositories>

    <profiles>
        <!-- Sonatype profile -->
        <profile>
            <id>sonatype-nexus-repo</id>
            <activation>
                <property>
                    <name>deployTo</name>
                    <value>sonatype</value>
                </property>
            </activation>
            <distributionManagement>
                <repository>
                    <id>sonatype-nexus-staging</id>
                    <name>Nexus Release Repository</name>
                    <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
                </repository>
                <snapshotRepository>
                    <id>sonatype-nexus-snapshots</id>
                    <name>Sonatype Nexus Snapshots</name>
                    <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
                </snapshotRepository>
            </distributionManagement>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>${maven-gpg-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Gitflow profile -->
        <profile>
            <id>gitflow</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.vackosar.gitflowincrementalbuilder</groupId>
                        <artifactId>gitflow-incremental-builder</artifactId>
                        <version>${maven-gitflow-incremental-builder-plugin.version}</version>
                        <extensions>true</extensions>
                        <configuration>
                            <help>false
                            </help>                                                         <!-- or -Dh=...     -->
                            <disable>false
                            </disable>                                                   <!-- or -Dd=...     -->
                            <disableIfBranchMatches/>                                                      <!-- or -Ddibm=...  -->
                            <disableIfReferenceBranchMatches/>                                             <!-- or -Ddirbm=... -->
                            <disableBranchComparison>false
                            </disableBranchComparison>                   <!-- or -Ddbc=...   -->
                            <referenceBranch>refs/remotes/origin/develop
                            </referenceBranch>             <!-- or -Drb=...    -->
                            <fetchReferenceBranch>false
                            </fetchReferenceBranch>                         <!-- or -Dfrb=...   -->
                            <baseBranch>HEAD
                            </baseBranch>                                              <!-- or -Dbb=...    -->
                            <fetchBaseBranch>false
                            </fetchBaseBranch>                                   <!-- or -Dfbb=...   -->
                            <useJschAgentProxy>true
                            </useJschAgentProxy>                                <!-- or -Dujap=...  -->
                            <compareToMergeBase>true
                            </compareToMergeBase>                              <!-- or -Dctmb=...  -->
                            <uncommitted>true
                            </uncommitted>                                            <!-- or -Duc=...    -->
                            <untracked>true
                            </untracked>                                                <!-- or -Dut=...    -->
                            <skipIfPathMatches/>                                                           <!-- or -Dsipm=...  -->
                            <excludePathsMatching/>                                                        <!-- or -Depm=...   -->
                            <includePathsMatching/>                                                        <!-- or -Dipm=...   -->
                            <buildAll>false
                            </buildAll>                                                 <!-- or -Dba=...    -->
                            <buildAllIfNoChanges>false
                            </buildAllIfNoChanges>                           <!-- or -Dbainc=... -->
                            <buildDownstream>always
                            </buildDownstream>                                  <!-- or -Dbd=...    -->
                            <buildUpstream>derived
                            </buildUpstream>                                     <!-- or -Dbu=...    -->
                            <buildUpstreamMode>changed
                            </buildUpstreamMode>                             <!-- or -Dbum=...   -->
                            <skipTestsForUpstreamModules>false
                            </skipTestsForUpstreamModules>           <!-- or -Dstfum=... -->
                            <argsForUpstreamModules/>                                                      <!-- or -Dafum=...  -->
                            <forceBuildModules/>                                                           <!-- or -Dfbm=...   -->
                            <excludeDownstreamModulesPackagedAs/>                                          <!-- or -Dedmpa=... -->
                            <disableSelectedProjectsHandling>false
                            </disableSelectedProjectsHandling>   <!-- or -Ddsph=...  -->
                            <failOnMissingGitDir>true
                            </failOnMissingGitDir>                            <!-- or -Dfomgd=... -->
                            <failOnError>true
                            </failOnError>                                            <!-- or -Dfoe=...   -->
                            <logImpactedTo/>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Site profile -->
        <profile>
            <id>site</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-changes-plugin</artifactId>
                        <version>${maven-changes-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>validate-changes</id>
                                <phase>pre-site</phase>
                                <goals>
                                    <goal>changes-validate</goal>
                                </goals>
                                <configuration>
                                    <failOnError>false</failOnError>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-site-plugin</artifactId>
                        <version>${maven-site-plugin.version}</version>
                        <configuration>
                            <siteDirectory>site</siteDirectory>
                            <skipDeploy>true</skipDeploy>
                            <asciidoc>
                                <attributes>
                                    <source-highlighter>coderay</source-highlighter>
                                    <coderay-css>style</coderay-css>
                                    <project-name>${project.name}</project-name>
                                    <project-group-id>${project.groupId}</project-group-id>
                                    <project-artifact-id>${project.artifactId}</project-artifact-id>
                                    <project-version>${project.version}</project-version>
                                </attributes>
                            </asciidoc>
                            <moduleExcludes>
                                <asciidoc>**/_*.adoc</asciidoc>
                            </moduleExcludes>
                        </configuration>
                        <executions>
                            <execution>
                                <id>stage-for-scm-publish</id>
                                <phase>post-site</phase>
                                <goals>
                                    <goal>stage</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>attach-descriptor</id>
                                <goals>
                                    <goal>attach-descriptor</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.asciidoctor</groupId>
                                <artifactId>asciidoctor-maven-plugin</artifactId>
                                <version>${maven-asciidoctor-plugin.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jxr-plugin</artifactId>
                        <version>${maven-jxr-plugin.version}</version>
                        <configuration>
                            <linkJavadoc>true</linkJavadoc>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>jdepend-maven-plugin</artifactId>
                        <version>${maven-jdepend-plugin.version}</version>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-pmd-plugin</artifactId>
                        <version>${maven-pmd-plugin.version}</version>
                        <configuration>
                            <format>html</format>
                            <linkXRef>true</linkXRef>
                            <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
                            <minimumTokens>100</minimumTokens>
                            <targetJdk>${java.version}</targetJdk>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Proguard profile -->
        <profile>
            <id>proguard</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.wvengen</groupId>
                        <artifactId>proguard-maven-plugin</artifactId>
                        <version>${maven-proguard-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>proguard</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>proguard</goal>
                                </goals>
                                <configuration>
                                    <injar>${project.build.finalName}-shade.jar</injar>
                                    <outjar>${project.build.finalName}.jar</outjar>
                                    <libs>
                                        <lib>${java.home}/lib/rt.jar</lib>
                                        <lib>${java.home}/lib/jsse.jar</lib>
                                        <lib>${project.build.directory}/dependencies/jsr305.jar</lib>
                                        <lib>${project.build.directory}/dependencies/javax.inject.jar</lib>
                                    </libs>
                                    <options>
                                        <option>-dontoptimize</option>
                                        <option>-dontobfuscate</option>
                                        <option>-keepparameternames</option>
                                        <option>-keepattributes Signature,InnerClasses,*Annotation*</option>
                                    </options>
                                    <addMavenDescriptor>false</addMavenDescriptor>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Spotless profile -->
        <profile>
            <id>spotless</id>
            <properties>
                <javafmt.version>1.8</javafmt.version>
                <scalafmt.version>2.0.1</scalafmt.version>
                <kotlinfmt.version>0.18</kotlinfmt.version>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.diffplug.spotless</groupId>
                        <artifactId>spotless-maven-plugin</artifactId>
                        <version>${maven-spotless-plugin.version}</version>
                        <configuration>
                            <!-- optional: limit format enforcement to just the files changed by this feature branch -->
                            <ratchetFrom>origin/main</ratchetFrom>
                            <formats>
                                <!-- you can define as many formats as you want, each is independent -->
                                <format>
                                    <!-- define the files to apply to -->
                                    <includes>
                                        <include>*.md</include>
                                        <include>.gitignore</include>
                                    </includes>
                                    <importOrder>
                                        <order>java,javax,org,com,com.diffplug,</order>
                                    </importOrder>
                                    <!-- define the steps to apply to those files -->
                                    <trimTrailingWhitespace/>
                                    <removeUnusedImports/>
                                    <endWithNewline/>
                                    <indent>
                                        <tabs>true</tabs>
                                        <spacesPerTab>4</spacesPerTab>
                                    </indent>
                                </format>
                            </formats>
                            <java>
                                <eclipse>
                                    <file>${main.basedir}/.spotless/eclipse-formatter-settings.xml</file>
                                </eclipse>
                                <importOrder>
                                    <file>${main.basedir}/.spotless/intelij-idea.importorder</file>
                                </importOrder>
                                <googleJavaFormat>
                                    <version>${javafmt.version}</version>
                                    <style>AOSP</style>
                                </googleJavaFormat>
                                <licenseHeader>
                                    <delimiter>package</delimiter>
                                    <file>${basedir}/license/license-header.txt</file>
                                </licenseHeader>
                            </java>
                            <ca>
                                <scalafmt>
                                    <version>${scalafmt.version}</version>
                                    <file>${basedir}/checkstyle/scalafmt.conf</file>
                                </scalafmt>
                                <licenseHeader>
                                    <delimiter>package</delimiter>
                                    <file>${basedir}/license/license-header.txt</file>
                                </licenseHeader>
                            </ca>
                            <kotlin>
                                <ktfmt>
                                    <version>${kotlinfmt.version}</version>
                                    <style>DEFAULT</style>
                                </ktfmt>
                                <licenseHeader>
                                    <delimiter>package</delimiter>
                                    <file>${basedir}/license/license-header.txt</file>
                                </licenseHeader>
                            </kotlin>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Dokka plugin -->
        <profile>
            <id>dokka</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jetbrains.dokka</groupId>
                        <artifactId>dokka-maven-plugin</artifactId>
                        <version>${maven-dokka-plugin.version}</version>
                        <executions>
                            <execution>
                                <phase>pre-site</phase>
                                <goals>
                                    <goal>dokka</goal>
                                    <goal>javadoc</goal>
                                    <goal>javadocJar</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <sourceLinks>
                                <link>
                                    <path>${project.basedir}</path>
                                    <url>${project.url}</url>
                                    <lineSuffix>#L</lineSuffix>
                                </link>
                            </sourceLinks>
                            <dokkaPlugins>
                                <plugin>
                                    <groupId>org.jetbrains.dokka</groupId>
                                    <artifactId>kotlin-as-java-plugin</artifactId>
                                    <version>${maven-dokka-plugin.version}</version>
                                </plugin>
                            </dokkaPlugins>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Lombok profile -->
        <profile>
            <id>delombok</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.projectlombok</groupId>
                        <artifactId>lombok-maven-plugin</artifactId>
                        <version>${maven-lombok-plugin.version}</version>
                        <configuration>
                            <sourceDirectory>${sourceJavaDirectory}</sourceDirectory>
                            <addOutputDirectory>false</addOutputDirectory>
                            <outputDirectory>${project.build.directory}/generated-sources/delombok</outputDirectory>
                            <verbose>true</verbose>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>delombok</goal>
                                </goals>
                                <phase>generate-sources</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Versionizer profile-->
        <profile>
            <id>versionizer</id>
            <properties>
                <version-java-package>io.nullables.api.playground.objectmappers</version-java-package>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.fizzed</groupId>
                        <artifactId>fizzed-versionizer-maven-plugin</artifactId>
                        <version>${maven-versionizer-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>generate-version-class</id>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                                <configuration>
                                    <javaPackage>${version-java-package}</javaPackage>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Heroku plugin -->
        <profile>
            <id>heroku</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.heroku.sdk</groupId>
                        <artifactId>heroku-maven-plugin</artifactId>
                        <version>${maven-heroku-plugin.version}</version>
                        <configuration>
                            <configVars>
                                <JAVA_OPTS>-Xss512k -Xmx256M -XX:+UseCompressedOops</JAVA_OPTS>
                            </configVars>
                            <jdkVersion>${java.version}</jdkVersion>
                            <includeTarget>false</includeTarget>
                            <logProgress>true</logProgress>
                            <appName>object-mappers</appName>
                            <processTypes>
                                <web>
                                    java $JAVA_OPTS -jar
                                    ./modules/objectmappers-benchmarks/.build/bin/io.nullables.api.playground.objectmappers.benchmarks/benchmarks.jar
                                </web>
                            </processTypes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Kotlin profile -->
        <profile>
            <id>kotlin</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <arrow.version>1.0.1</arrow.version>
                <kotlin-jackson.version>2.12.1</kotlin-jackson.version>
                <kotlin.version>1.6.21</kotlin.version>
                <kotest.version>5.3.0</kotest.version>
                <maven-ktlint-plugin.version>1.9.0</maven-ktlint-plugin.version>
                <kotlinx-coroutines.version>1.6.1</kotlinx-coroutines.version>
                <dagger.version>2.31.2</dagger.version>
                <mockito-kotlin.version>4.0.0</mockito-kotlin.version>
                <mockk.version>1.10.0</mockk.version>
                <kotest-extensions.version>1.2.5</kotest-extensions.version>
                <kotlinx-serialization-json.version>1.3.3</kotlinx-serialization-json.version>
                <kotlin.compiler.incremental>true</kotlin.compiler.incremental>
            </properties>

            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>io.arrow-kt</groupId>
                        <artifactId>arrow-stack</artifactId>
                        <version>${arrow.version}</version>
                        <type>pom</type>
                        <scope>import</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-bom</artifactId>
                        <version>${kotlin.version}</version>
                        <type>pom</type>
                        <scope>import</scope>
                    </dependency>
                    <dependency>
                        <groupId>io.kotest</groupId>
                        <artifactId>kotest-bom</artifactId>
                        <version>${kotest.version}</version>
                        <type>pom</type>
                        <scope>import</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.jetbrains.kotlinx</groupId>
                        <artifactId>kotlinx-serialization-json</artifactId>
                        <version>${kotlinx-serialization-json.version}</version>
                        <type>pom</type>
                        <scope>runtime</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.jetbrains.kotlinx</groupId>
                        <artifactId>kotlinx-coroutines-bom</artifactId>
                        <version>${kotlinx-coroutines.version}</version>
                        <type>pom</type>
                        <scope>import</scope>
                    </dependency>
                </dependencies>
            </dependencyManagement>

            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.jetbrains.kotlin</groupId>
                            <artifactId>kotlin-maven-plugin</artifactId>
                            <version>${kotlin.version}</version>
                        </plugin>
                    </plugins>
                </pluginManagement>

                <plugins>
                    <plugin>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-plugin</artifactId>
                        <version>${kotlin.version}</version>
                        <configuration>
                            <compilerPlugins>
                                <!--                                <plugin>spring</plugin>-->
                                <!--                                <plugin>jpa</plugin>-->
                                <plugin>kotlinx-serialization</plugin>
                                <plugin>all-open</plugin>
                            </compilerPlugins>
                            <jvmTarget>${java.version}</jvmTarget>
                            <args>
                                <arg>-Xjsr305=strict</arg>
                            </args>
                            <!--                            <pluginOptions>-->
                            <!--                                <option>all-open:annotation=javax.persistence.Entity</option>-->
                            <!--                                <option>all-open:annotation=javax.persistence.Embeddable</option>-->
                            <!--                                <option>all-open:annotation=javax.persistence.MappedSuperclass</option>-->
                            <!--                            </pluginOptions>-->
                            <sourceDirs>
                                <sourceDir>${sourceKotlinDirectory}</sourceDir>
                                <sourceDir>${sourceJavaDirectory}</sourceDir>
                                <sourceDir>${project.build.directory}/generated-sources/annotations</sourceDir>
                            </sourceDirs>
                        </configuration>
                        <executions>
                            <execution>
                                <id>kapt</id>
                                <goals>
                                    <goal>kapt</goal>
                                </goals>
                                <configuration>
                                    <sourceDirs>
                                        <sourceDir>${sourceKotlinDirectory}</sourceDir>
                                        <sourceDir>${sourceJavaDirectory}</sourceDir>
                                    </sourceDirs>
                                    <annotationProcessorPaths>
                                        <annotationProcessorPath>
                                            <groupId>com.google.dagger</groupId>
                                            <artifactId>dagger-compiler</artifactId>
                                            <version>${dagger.version}</version>
                                        </annotationProcessorPath>
                                        <annotationProcessorPath>
                                            <groupId>io.arrow-kt</groupId>
                                            <artifactId>arrow-meta</artifactId>
                                            <version>${arrow.version}</version>
                                        </annotationProcessorPath>
                                    </annotationProcessorPaths>
                                </configuration>
                            </execution>
                            <execution>
                                <id>compile</id>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>compile</goal>
                                </goals>
                                <configuration>
                                    <sourceDirs>
                                        <sourceDir>${sourceKotlinDirectory}</sourceDir>
                                        <sourceDir>${sourceJavaDirectory}</sourceDir>
                                        <sourceDir>${sourceResourceDirectory}</sourceDir>
                                    </sourceDirs>
                                </configuration>
                            </execution>
                            <execution>
                                <id>test-kapt</id>
                                <goals>
                                    <goal>test-kapt</goal>
                                </goals>
                                <configuration>
                                    <sourceDirs>
                                        <sourceDir>${sourceKotlinTestDirectory}</sourceDir>
                                        <sourceDir>${sourceJavaTestDirectory}</sourceDir>
                                    </sourceDirs>
                                    <annotationProcessorPaths>
                                        <annotationProcessorPath>
                                            <groupId>com.google.dagger</groupId>
                                            <artifactId>dagger-compiler</artifactId>
                                            <version>${dagger.version}</version>
                                        </annotationProcessorPath>
                                    </annotationProcessorPaths>
                                </configuration>
                            </execution>
                            <execution>
                                <id>test-compile</id>
                                <phase>process-test-sources</phase>
                                <goals>
                                    <goal>test-compile</goal>
                                </goals>
                                <configuration>
                                    <sourceDirs>
                                        <sourceDir>${sourceKotlinTestDirectory}</sourceDir>
                                        <sourceDir>${sourceJavaTestDirectory}</sourceDir>
                                        <sourceDir>${sourceResourceTestDirectory}</sourceDir>
                                    </sourceDirs>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.jetbrains.kotlin</groupId>
                                <artifactId>kotlin-maven-allopen</artifactId>
                                <version>${kotlin.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>org.jetbrains.kotlin</groupId>
                                <artifactId>kotlin-maven-noarg</artifactId>
                                <version>${kotlin.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>org.jetbrains.kotlin</groupId>
                                <artifactId>kotlin-maven-serialization</artifactId>
                                <version>${kotlin.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>

                    <plugin>
                        <groupId>com.github.gantsign.maven</groupId>
                        <artifactId>ktlint-maven-plugin</artifactId>
                        <version>${maven-ktlint-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>check</id>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>

            <dependencies>
                <dependency>
                    <groupId>io.arrow-kt</groupId>
                    <artifactId>arrow-core</artifactId>
                    <version>${arrow.version}</version>
                </dependency>
                <dependency>
                    <groupId>com.fasterxml.jackson.module</groupId>
                    <artifactId>jackson-module-kotlin</artifactId>
                    <version>${kotlin-jackson.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-reflect</artifactId>
                    <version>${kotlin.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-stdlib</artifactId>
                    <version>${kotlin.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-stdlib-jdk8</artifactId>
                    <version>${kotlin.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-stdlib-common</artifactId>
                    <version>${kotlin.version}</version>
                </dependency>

                <!-- Kotlin test library dependencies -->
                <dependency>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-test</artifactId>
                    <version>${kotlin.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.mockito.kotlin</groupId>
                    <artifactId>mockito-kotlin</artifactId>
                    <version>${mockito-kotlin.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-test-junit5</artifactId>
                    <version>${kotlin.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>io.mockk</groupId>
                    <artifactId>mockk</artifactId>
                    <version>${mockk.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>io.kotest</groupId>
                    <artifactId>kotest-runner-junit5-jvm</artifactId>
                    <version>${kotest.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>io.kotest</groupId>
                    <artifactId>kotest-framework-datatest-jvm</artifactId>
                    <version>${kotest.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>io.kotest</groupId>
                    <artifactId>kotest-assertions-core-jvm</artifactId>
                    <version>${kotest.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>io.kotest</groupId>
                    <artifactId>kotest-property-jvm</artifactId>
                    <version>${kotest.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>io.kotest.extensions</groupId>
                    <artifactId>kotest-assertions-arrow-jvm</artifactId>
                    <version>${kotest-extensions.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>

        <!-- Java version profile -->
        <profile>
            <id>java-version</id>
            <activation>
                <property>
                    <name>env.JAVA_VERSION_BUILD</name>
                </property>
            </activation>
            <properties>
                <java.version>${env.JAVA_VERSION_BUILD}</java.version>
            </properties>
        </profile>

        <!-- Sundr profile -->
        <profile>
            <id>bom</id>
            <properties>
                <bom.template.file.path>
                    file:///${session.executionRootDirectory}/package/bom.xml
                </bom.template.file.path>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.sundr</groupId>
                        <artifactId>sundr-maven-plugin</artifactId>
                        <version>${maven-sundr-plugin.version}</version>
                        <inherited>false</inherited>
                        <configuration>
                            <bomTemplateUrl>${bom.template.file.path}</bomTemplateUrl>
                            <boms>
                                <bom>
                                    <artifactId>object-mappers-bom</artifactId>
                                    <name>ObjectMappers (Bill Of Materials)</name>
                                    <properties>
                                        <skipStagingRepositoryClose>true</skipStagingRepositoryClose>
                                        <license.skip>true</license.skip>
                                        <sonar.skip>true</sonar.skip>
                                    </properties>
                                    <modules>
                                        <includes>
                                            <include>io.nullables.api.playground:*</include>
                                        </includes>
                                        <excludes>
                                            <exclude>*:objectmappers-it</exclude>
                                            <exclude>*:objectmappers-benchmark</exclude>
                                        </excludes>
                                    </modules>
                                </bom>
                            </boms>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>generate-bom</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>io.sundr</groupId>
                                <artifactId>sundr-codegen</artifactId>
                                <version>${maven-sundr-plugin.version}</version>
                                <exclusions>
                                    <exclusion>
                                        <groupId>com.sun</groupId>
                                        <artifactId>tools</artifactId>
                                    </exclusion>
                                </exclusions>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Duplicate profile -->
        <profile>
            <id>duplicate</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.ning.maven.plugins</groupId>
                        <artifactId>maven-duplicate-finder-plugin</artifactId>
                        <version>${maven-duplicate-finder-plugin.version}</version>
                        <inherited>true</inherited>
                        <configuration>
                            <useDefaultResourceIgnoreList>true</useDefaultResourceIgnoreList>
                            <printEqualFiles>false</printEqualFiles>
                            <failBuildInCaseOfDifferentContentConflict>false
                            </failBuildInCaseOfDifferentContentConflict>
                            <failBuildInCaseOfEqualContentConflict>false</failBuildInCaseOfEqualContentConflict>
                            <failBuildInCaseOfConflict>false</failBuildInCaseOfConflict>
                            <checkCompileClasspath>true</checkCompileClasspath>
                            <checkRuntimeClasspath>false</checkRuntimeClasspath>
                            <checkTestClasspath>false</checkTestClasspath>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>validate</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>groovy</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.gmaven</groupId>
                        <artifactId>groovy-maven-plugin</artifactId>
                        <version>${maven-groovy-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>set-platform-properties</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <source>
                                        // Naming conventions coined by GraalVM
                                        // https://github.com/graalvm/graalvm-ce-builds/releases/
                                        String osName = System.getProperty('os.name').toLowerCase(Locale.ROOT)
                                        if (osName.startsWith('windows')) {
                                            project.properties['os.detected.name'] = 'windows'
                                        } else if (osName.startsWith('linux')) {
                                            project.properties['os.detected.name'] = 'linux'
                                        } else if (osName.startsWith('osx') || osName.startsWith('mac os x')) {
                                            project.properties['os.detected.name'] = 'darwin'
                                        } else {
                                            project.properties['os.detected.name'] = osName
                                        }
                                        String osArch = System.getProperty('os.arch').toLowerCase(Locale.ROOT)
                                        if (osArch == 'amd64' || osArch == 'x86_64') {
                                            project.properties['os.detected.arch'] = 'amd64'
                                        } else {
                                            project.properties['os.detected.arch'] = osArch
                                        }
                                    </source>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Audit profile -->
        <profile>
            <id>audit</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>us.vchain</groupId>
                        <artifactId>jvcn-maven-plugin</artifactId>
                        <version>${maven-jvcn-plugin.version}</version>
                        <configuration>
                            <failOnError>false</failOnError>
                        </configuration>
                        <executions>
                            <execution>
                                <id>audit</id>
                                <goals>
                                    <goal>audit</goal>
                                </goals>
                                <phase>validate</phase>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.rat</groupId>
                        <artifactId>apache-rat-plugin</artifactId>
                        <version>${maven-rat-plugin.version}</version>
                        <configuration>
                            <excludes>
                                <exclude>**/*.md</exclude>
                                <exclude>**/*.csv</exclude>
                                <exclude>**/*.lst</exclude>
                                <exclude>**/*.args</exclude>
                                <exclude>**/*.yaml</exclude>
                                <exclude>**/*.yml</exclude>
                                <exclude>**/*.properties</exclude>
                                <exclude>**/*.groovy</exclude>
                                <exclude>**/*.log</exclude>
                                <exclude>**/*.uml</exclude>
                                <exclude>**/*.xml</exclude>
                                <exclude>**/*.plt</exclude>
                                <exclude>**/*.ftl</exclude>
                                <exclude>**/*.json</exclude>
                                <exclude>**/*.template</exclude>
                                <exclude>**/*.bat</exclude>
                                <exclude>**/*.sh</exclude>
                                <exclude>**/*.txt</exclude>
                                <exclude>**/*.config</exclude>
                                <exclude>**/.*</exclude>
                                <exclude>**/Dockerfile</exclude>
                            </excludes>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>verify</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Modernizer profile -->
        <profile>
            <id>modernizer</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.gaul</groupId>
                        <artifactId>modernizer-maven-plugin</artifactId>
                        <version>${maven-modernizer-plugin.version}</version>
                        <configuration>
                            <javaVersion>${java.version}</javaVersion>
                            <exclusionPatterns>
                                <exclusionPattern>org/joda/time/.*</exclusionPattern>
                            </exclusionPatterns>
                        </configuration>
                        <executions>
                            <execution>
                                <id>modernizer</id>
                                <goals>
                                    <goal>modernizer</goal>
                                </goals>
                                <phase>verify</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Allure reports profile -->
        <profile>
            <id>allure-reports</id>
            <properties>
                <allure-report.version>2.13.1</allure-report.version>
                <allure.version>2.13.7</allure.version>
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>io.qameta.allure</groupId>
                            <artifactId>allure-maven</artifactId>
                            <version>${maven-qameta-allure-plugin.version}</version>
                            <configuration>
                                <installDirectory>.build/bin/allure</installDirectory>
                                <reportVersion>${allure-report.version}</reportVersion>
                                <outputDirectory>${project.build.directory}</outputDirectory>
                                <reportingOutputDirectory>${project.build.directory}</reportingOutputDirectory>
                                <resultsDirectory>${project.build.directory}/allure-results</resultsDirectory>
                                <reportDirectory>${project.build.directory}/allure-report</reportDirectory>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>report</id>
                                    <goals>
                                        <goal>report</goal>
                                    </goals>
                                    <phase>test</phase>
                                </execution>
                            </executions>
                            <dependencies>
                                <dependency>
                                    <groupId>io.qameta.allure</groupId>
                                    <artifactId>allure-junit5</artifactId>
                                    <version>${allure.version}</version>
                                </dependency>
                                <dependency>
                                    <groupId>io.qameta.allure</groupId>
                                    <artifactId>allure-java-commons</artifactId>
                                    <version>${allure.version}</version>
                                </dependency>
                            </dependencies>
                        </plugin>
                    </plugins>
                </pluginManagement>

                <plugins>
                    <plugin>
                        <groupId>io.qameta.allure</groupId>
                        <artifactId>allure-maven</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Linter profile -->
        <profile>
            <id>lint</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.ec4j.maven</groupId>
                        <artifactId>editorconfig-maven-plugin</artifactId>
                        <version>${maven-editorconfig-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>check</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <failOnFormatViolation>false</failOnFormatViolation>
                            <excludes>
                                <exclude>.gitignore</exclude>
                                <exclude>.editorconfig</exclude>
                                <exclude>LICENSE</exclude>
                                <exclude>**/*.log</exclude>
                                <exclude>**/*.xml</exclude>
                                <exclude>**/*.yml</exclude>
                                <exclude>**/*.yaml</exclude>
                                <exclude>**/*.txt</exclude>
                                <exclude>**/*.uml</exclude>
                                <exclude>**/*.ftl</exclude>
                                <exclude>**/*.properties</exclude>
                                <exclude>**/*.template</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Uml profile -->
        <profile>
            <id>uml</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.iluwatar.urm</groupId>
                        <artifactId>urm-maven-plugin</artifactId>
                        <version>${maven-urm-plugin.version}</version>
                        <configuration>
                            <outputDirectory>${project.basedir}/etc</outputDirectory>
                            <packages>
                                <param>io.nullables.api.playground.objectmappers</param>
                            </packages>
                            <includeMainDirectory>true</includeMainDirectory>
                            <includeTestDirectory>false</includeTestDirectory>
                            <presenter>plantuml</presenter>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>process-classes</phase>
                                <goals>
                                    <goal>map</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- License profile -->
        <profile>
            <id>license</id>
            <properties>
                <license.licenseName>gpl_v3</license.licenseName>
                <license.licenseResolver>${project.baseUri}/license</license.licenseResolver>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>license-maven-plugin</artifactId>
                        <version>${maven-license-plugin.version}</version>
                        <configuration>
                            <verbose>false</verbose>
                            <failOnNotUptodateHeader>false</failOnNotUptodateHeader>
                            <failOnMissingHeader>false</failOnMissingHeader>
                            <addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
                            <excludes>
                                <exclude>src/main/resources/META-INF/**</exclude>
                                <exclude>src/**/resources/vendor/**/*</exclude>
                                <exclude>src/**/resources/application*</exclude>
                                <exclude>src/test/resources/mockito-extensions/**</exclude>
                                <exclude>**/*.json</exclude>
                            </excludes>
                            <excludedScopes>provided,system,test</excludedScopes>
                            <encoding>${project.build.sourceEncoding}</encoding>
                            <canUpdateDescription>false</canUpdateDescription>
                            <licenseName>${license.licenseName}</licenseName>
                            <licenseResolver>${license.licenseResolver}</licenseResolver>
                            <inceptionYear>${project.inceptionYear}</inceptionYear>
                            <organizationName>${project.organization.name}</organizationName>
                            <processStartTag>
                                ========================LICENSE_START=================================
                            </processStartTag>
                            <processEndTag>
                                =========================LICENSE_END==================================
                            </processEndTag>
                            <includedLicenses>
                                <includedLicense>Apache License, Version 2.0</includedLicense>
                                <includedLicense>BSD License</includedLicense>
                                <includedLicense>Common Development and Distribution License Version 1.1
                                </includedLicense>
                                <includedLicense>Creative Commons CC0 1.0 Universal</includedLicense>
                                <includedLicense>Day Specification License</includedLicense>
                                <includedLicense>Eclipse Public License - v 1.0</includedLicense>
                                <includedLicense>GNU Lesser General Public License, Version 2.1</includedLicense>
                                <includedLicense>MIT License</includedLicense>
                                <includedLicense>Mozilla Public License Version 1.1</includedLicense>
                                <includedLicense>Public Domain</includedLicense>
                                <includedLicense>WTFPL</includedLicense>
                            </includedLicenses>
                            <licenseMerges>
                                <licenseMerge>Apache License, Version 2.0|Apache 2|Apache 2.0|Apache 2.0 License|Apache
                                    v2|Apache License|Apache License 2.0|Apache License, version 2.0|Apache Software
                                    License 2.0|Apache Software License - Version 2.0|Apache Software License - Version
                                    2.0, Eclipse Public License - Version 1.0|Apache Software Licenses|The Apache
                                    License, Version 2.0|The Apache Software License, Version 2.0
                                </licenseMerge>
                                <licenseMerge>BSD License|BSD|BSD licence|Eclipse Distribution License (New BSD
                                    License)|New BSD license|The BSD 3-Clause License|The BSD License|The New BSD
                                    License
                                </licenseMerge>
                                <licenseMerge>Common Development and Distribution License Version 1.1|CDDL + GPLv2 with
                                    classpath exception|CDDL 1.1|CDDL+GPL License|CDDL/GPLv2+CE|Common Development and
                                    Distribution License|Common Development and Distribution License (CDDL) v1.0|COMMON
                                    DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL) Version 1.0|Dual license consisting of
                                    the CDDL v1.1 and GPL v2|GNU General Public License, Version 2 with the Classpath
                                    Exception|GPL2 w/ CPE
                                </licenseMerge>
                                <licenseMerge>Creative Commons CC0 1.0 Universal|CC0|CC0 1.0 Universal|Public Domain,
                                    per Creative Commons CC0
                                </licenseMerge>
                                <licenseMerge>Eclipse Public License - v 1.0|Eclipse Public License v1.0|Eclipse Public
                                    License (EPL), Version 1.0|Eclipse Public License - Version 1.0
                                </licenseMerge>
                                <licenseMerge>GNU Lesser General Public License, Version 2.1|GNU LESSER GENERAL PUBLIC
                                    LICENSE|GNU Lesser General Public License|GNU General Lesser Public License (LGPL)
                                    version 2.1|lgpl|LGPL 2.1|LGPL-2.1|LGPL, version 2.1
                                </licenseMerge>
                                <licenseMerge>MIT License|Bouncy Castle Licence|MIT license</licenseMerge>
                                <licenseMerge>Mozilla Public License Version 1.1|MPL 1.1</licenseMerge>
                            </licenseMerges>
                        </configuration>
                        <executions>
                            <execution>
                                <id>generate-license-resources</id>
                                <goals>
                                    <goal>add-third-party</goal>
                                </goals>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <includedScopes>runtime,compile</includedScopes>
                                    <includeTransitiveDependencies>true</includeTransitiveDependencies>
                                    <fileTemplate>${project.baseUri}/license/third-party.ftl</fileTemplate>
                                </configuration>
                            </execution>
                            <execution>
                                <id>update-file-header</id>
                                <goals>
                                    <goal>update-file-header</goal>
                                </goals>
                                <phase>process-sources</phase>
                                <configuration>
                                    <roots>
                                        <root>${sourceJavaDirectory}</root>
                                        <root>${sourceJavaTestDirectory}</root>
                                    </roots>
                                </configuration>
                            </execution>
                            <execution>
                                <id>check-file-header</id>
                                <goals>
                                    <goal>check-file-header</goal>
                                </goals>
                                <phase>prepare-package</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Checksum profile -->
        <profile>
            <id>checksum</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>net.ju-n.maven.plugins</groupId>
                        <artifactId>checksum-maven-plugin</artifactId>
                        <version>${maven-checksum-plugin.version}</version>
                        <configuration>
                            <algorithms>
                                <algorithm>MD5</algorithm>
                                <algorithm>SHA-256</algorithm>
                            </algorithms>
                            <csvSummary>false</csvSummary>
                            <fileSets>
                                <fileSet>
                                    <directory>${project.build.directory}</directory>
                                </fileSet>
                            </fileSets>
                        </configuration>
                        <executions>
                            <execution>
                                <id>checksum-artifacts</id>
                                <goals>
                                    <goal>artifacts</goal>
                                </goals>
                                <phase>verify</phase>
                            </execution>
                            <execution>
                                <id>generate-artifact-checksum</id>
                                <goals>
                                    <goal>files</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Compat profile -->
        <profile>
            <id>compat</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>clirr-maven-plugin</artifactId>
                        <version>${maven-clirr-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>check-api</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <logResults>true</logResults>
                            <minSeverity>warning</minSeverity>
                            <ignoredDifferencesFile>
                                ${session.executionRootDirectory}/checkstyle/ignored-differences.xml
                            </ignoredDifferencesFile>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- GPG sign profile -->
        <profile>
            <id>gpg-sign</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <gpg.keyname>key</gpg.keyname>
                <gpg.passphrase>password</gpg.passphrase>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>${maven-gpg-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                                <phase>verify</phase>
                                <configuration>
                                    <ascDirectory>.</ascDirectory>
                                    <keyname>${gpg.keyname}</keyname>
                                    <passphrase>${gpg.passphrase}</passphrase>
                                    <gpgArguments>
                                        <arg>--allow-weak-digest-algos</arg>
                                        <arg>--batch</arg>
                                        <arg>--pinentry-mode</arg>
                                        <arg>loopback</arg>
                                    </gpgArguments>
                                    <excludes>
                                        <exclude>**/*.gz</exclude>
                                        <exclude>**/*.zip</exclude>
                                    </excludes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Jar sign profile -->
        <profile>
            <id>jar-sign</id>
            <properties>
                <jarsigner.alias>objectmap-keystore</jarsigner.alias>
                <jarsigner.password>testtest</jarsigner.password>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jarsigner-plugin</artifactId>
                        <version>${maven-jarsigner-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>signing</id>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                                <phase>package</phase>
                                <configuration>
                                    <keystore>${session.executionRootDirectory}/keystore/objectmap.keystore</keystore>
                                    <alias>${jarsigner.alias}</alias>
                                    <storepass>${jarsigner.password}</storepass>
                                    <keypass>${jarsigner.password}</keypass>
                                    <arguments>
                                        <argument>-sigalg</argument>
                                        <argument>MD5withRSA</argument>
                                        <argument>-digestalg</argument>
                                        <argument>SHA1</argument>
                                    </arguments>
                                    <excludes>
                                        <exclude>**/*.gz</exclude>
                                        <exclude>**/*.zip</exclude>
                                    </excludes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Forbidden API check profile -->
        <profile>
            <id>forbidden-api-check</id>
            <properties>
                <forbiddenapis.failOnViolation>false</forbiddenapis.failOnViolation>
                <forbiddenapis.failOnMissingClasses>true</forbiddenapis.failOnMissingClasses>
                <forbiddenapis.failOnUnsupportedJava>false</forbiddenapis.failOnUnsupportedJava>
                <forbiddenapis.failOnUnresolvableSignatures>false</forbiddenapis.failOnUnresolvableSignatures>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>de.thetaphi</groupId>
                        <artifactId>forbiddenapis</artifactId>
                        <version>${maven-forbiddenapis-plugin.version}</version>
                        <configuration>
                            <targetVersion>${java.version}</targetVersion>
                            <failOnViolation>${forbiddenapis.failOnViolation}</failOnViolation>
                            <failOnMissingClasses>${forbiddenapis.failOnMissingClasses}</failOnMissingClasses>
                            <failOnUnsupportedJava>${forbiddenapis.failOnUnsupportedJava}</failOnUnsupportedJava>
                            <failOnUnresolvableSignatures>${forbiddenapis.failOnUnresolvableSignatures}
                            </failOnUnresolvableSignatures>
                            <bundledSignatures>
                                <bundledSignature>jdk-unsafe</bundledSignature>
                                <bundledSignature>jdk-deprecated</bundledSignature>
                                <bundledSignature>jdk-internal</bundledSignature>
                                <bundledSignature>jdk-non-portable</bundledSignature>
                                <bundledSignature>jdk-reflection</bundledSignature>
                                <bundledSignature>jdk-system-out</bundledSignature>
                            </bundledSignatures>
                        </configuration>
                        <executions>
                            <execution>
                                <id>check-forbidden-apis</id>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <configuration combine.self="append">
                                    <suppressAnnotations>
                                        <suppressAnnotation>**.SuppressForbidden</suppressAnnotation>
                                    </suppressAnnotations>
                                </configuration>
                            </execution>
                            <execution>
                                <id>check-forbidden-apis-tests</id>
                                <goals>
                                    <goal>testCheck</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Deploy profile -->
        <profile>
            <id>deploy</id>
            <properties>
                <wagon-ssh.version>3.4.2</wagon-ssh.version>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <version>${maven-deploy-plugin.version}</version>
                        <configuration>
                            <retryFailedDeploymentCount>10</retryFailedDeploymentCount>
                        </configuration>
                        <executions>
                            <execution>
                                <id>default-deploy</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>deploy</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-release-plugin</artifactId>
                        <version>${maven-release-plugin.version}</version>
                        <configuration>
                            <tagNameFormat>v${project.artifactId}-${project.version}</tagNameFormat>
                            <mavenExecutorId>forked-path</mavenExecutorId>
                            <useReleaseProfile>false</useReleaseProfile>
                            <releaseProfiles>release</releaseProfiles>
                            <localCheckout>true</localCheckout>
                            <pushChanges>false</pushChanges>
                            <goals>deploy site</goals>
                            <remoteTagging>true</remoteTagging>
                            <preparationGoals>clean install</preparationGoals>
                            <allowTimestampedSnapshots>true</allowTimestampedSnapshots>
                            <autoVersionSubmodules>true</autoVersionSubmodules>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>org.apache.maven.scm</groupId>
                                <artifactId>maven-scm-provider-gitexe</artifactId>
                                <version>${maven-scm-provider-gitexe.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>

                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>${maven-nexus-staging-plugin.version}</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>org.apache.maven.wagon</groupId>
                                <artifactId>wagon-ssh</artifactId>
                                <version>${wagon-ssh.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Format profile -->
        <profile>
            <id>format</id>
            <properties>
                <ec4j-core.version>0.2.2</ec4j-core.version>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>net.revelc.code.formatter</groupId>
                        <artifactId>formatter-maven-plugin</artifactId>
                        <version>${maven-formatter-plugin.version}</version>
                        <configuration>
                            <basedir>modules</basedir>
                            <lineEnding>KEEP</lineEnding>
                            <compilerSource>${java.version}</compilerSource>
                            <compilerCompliance>${java.version}</compilerCompliance>
                            <compilerTargetPlatform>${java.version}</compilerTargetPlatform>
                            <configFile>${session.executionRootDirectory}/codestyle/codestyle.xml</configFile>
                            <encoding>${project.build.sourceEncoding}</encoding>
                            <excludes>
                                <exclude>**/objectmappers-benchmarks/**/*.java</exclude>
                            </excludes>
                        </configuration>
                        <executions>
                            <execution>
                                <id>format-java</id>
                                <goals>
                                    <goal>format</goal>
                                </goals>
                                <phase>process-sources</phase>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.ec4j.core</groupId>
                                <artifactId>ec4j-core-build</artifactId>
                                <version>${ec4j-core.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>

                    <plugin>
                        <groupId>net.revelc.code</groupId>
                        <artifactId>impsort-maven-plugin</artifactId>
                        <version>${maven-impsort-plugin.version}</version>
                        <configuration>
                            <groups>java.,javax.,org.,com.</groups>
                            <staticGroups>java,*</staticGroups>
                            <removeUnused>true</removeUnused>
                        </configuration>
                        <executions>
                            <execution>
                                <id>sort-imports</id>
                                <goals>
                                    <goal>sort</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>com.coveo</groupId>
                        <artifactId>fmt-maven-plugin</artifactId>
                        <version>${maven-fmt-plugin.version}</version>
                        <configuration>
                            <verbose>true</verbose>
                            <displayFiles>true</displayFiles>
                            <filesNamePattern>.*\.java</filesNamePattern>
                            <skipSortingImports>true</skipSortingImports>
                            <style>google</style>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Security check profile -->
        <profile>
            <id>security-check</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.owasp</groupId>
                        <artifactId>dependency-check-maven</artifactId>
                        <version>${maven-dependency-check-plugin.version}</version>
                        <configuration>
                            <format>ALL</format>
                            <failBuildOnAnyVulnerability>true</failBuildOnAnyVulnerability>
                            <cveValidForHours>12</cveValidForHours>
                            <failBuildOnCVSS>1</failBuildOnCVSS>
                            <skipProvidedScope>true</skipProvidedScope>
                            <skipRuntimeScope>true</skipRuntimeScope>
                            <assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
                            <suppressionFile>${basedir}/checkstyle/dependency-check-suppression.xml</suppressionFile>
                        </configuration>
                        <executions>
                            <execution>
                                <id>aggregate</id>
                                <goals>
                                    <goal>aggregate</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>check</id>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Sort pom profile -->
        <profile>
            <id>sort-pom</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.ekryd.sortpom</groupId>
                        <artifactId>sortpom-maven-plugin</artifactId>
                        <version>${maven-sortpom-plugin.version}</version>
                        <configuration>
                            <sortOrderFile>
                                ${session.executionRootDirectory}/codestyle/pom-sort-style.xml
                            </sortOrderFile>
                            <createBackupFile>false</createBackupFile>
                            <nrOfIndentSpace>4</nrOfIndentSpace>
                            <lineSeparator>\n</lineSeparator>
                            <encoding>${project.build.sourceEncoding}</encoding>
                            <sortProperties>true</sortProperties>
                            <keepBlankLines>true</keepBlankLines>
                            <sortDependencies>groupId,artifactId</sortDependencies>
                            <sortPlugins>groupId,artifactId</sortPlugins>
                            <expandEmptyElements>false</expandEmptyElements>
                        </configuration>
                        <executions>
                            <execution>
                                <id>format</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sort</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Flatten pom profile -->
        <profile>
            <id>flatten-pom</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>flatten-maven-plugin</artifactId>
                        <version>${maven-flatten-plugin.version}</version>
                        <inherited>true</inherited>
                        <configuration>
                            <updatePomFile>true</updatePomFile>
                            <flattenMode>oss</flattenMode>
                            <embedBuildProfileDependencies>true</embedBuildProfileDependencies>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <pomElements>
                                <description>keep</description>
                                <name>keep</name>
                                <profiles>remove</profiles>
                                <properties>keep</properties>
                                <parent>expand</parent>
                                <distributionManagement>remove</distributionManagement>
                                <dependencyManagement>resolve</dependencyManagement>
                                <repositories>remove</repositories>
                                <pluginManagement>keep</pluginManagement>
                                <dependencies>keep</dependencies>
                                <build>keep</build>
                            </pomElements>
                        </configuration>
                        <executions>
                            <execution>
                                <id>flatten</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>flatten</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>flatten-clean</id>
                                <phase>clean</phase>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Code Quality check profile -->
        <profile>
            <id>code-quality-check</id>
            <properties>
                <spotbugs.version>${maven-spotbugs-plugin.version}</spotbugs.version>
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>se.bjurr.violations</groupId>
                            <artifactId>violations-maven-plugin</artifactId>
                            <version>${maven-violations-plugin.version}</version>
                            <configuration>
                                <maxViolations>0</maxViolations>
                                <detailLevel>VERBOSE</detailLevel>
                                <minSeverity>ERROR</minSeverity>
                                <violations>
                                    <violation>
                                        <parser>FINDBUGS</parser>
                                        <reporter>Spotbugs</reporter>
                                        <folder>${project.basedir}</folder>
                                        <pattern>.*/spotbugsXml\.xml$</pattern>
                                    </violation>
                                    <violation>
                                        <parser>PMD</parser>
                                        <reporter>PMD</reporter>
                                        <folder>${project.basedir}</folder>
                                        <pattern>.*/pmd\.xml$</pattern>
                                    </violation>
                                    <violation>
                                        <parser>CHECKSTYLE</parser>
                                        <reporter>Checkstyle</reporter>
                                        <folder>${project.basedir}</folder>
                                        <pattern>.*/checkstyle-result\.xml$</pattern>
                                    </violation>
                                </violations>
                            </configuration>
                            <executions>
                                <execution>
                                    <phase>verify</phase>
                                    <goals>
                                        <goal>violations</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>com.github.spotbugs</groupId>
                            <artifactId>spotbugs-maven-plugin</artifactId>
                            <version>${maven-spotbugs-plugin.version}</version>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-pmd-plugin</artifactId>
                            <version>${maven-pmd-plugin.version}</version>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-checkstyle-plugin</artifactId>
                            <version>${maven-checkstyle-plugin.version}</version>
                        </plugin>
                        <plugin>
                            <groupId>pl.project13.maven</groupId>
                            <artifactId>git-commit-id-plugin</artifactId>
                            <version>${maven-git-commit-id-plugin.version}</version>
                        </plugin>
                    </plugins>
                </pluginManagement>

                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>findbugs-maven-plugin</artifactId>
                        <version>${maven-findbugs-plugin.version}</version>
                        <configuration combine.self="override">
                            <findbugsXmlOutput>true</findbugsXmlOutput>
                            <failOnError>false</failOnError>
                            <effort>Max</effort>
                            <threshold>Low</threshold>
                            <xmlOutput>true</xmlOutput>
                            <findbugsXmlOutputDirectory>
                                ${project.build.directory}/findbugs
                            </findbugsXmlOutputDirectory>
                            <excludeFilterFile>
                                ${session.executionRootDirectory}/checkstyle/findbugs-exclude.xml
                            </excludeFilterFile>
                            <excludeBugsFile>
                                ${session.executionRootDirectory}/checkstyle/findbugs-exclude-bugs.xml
                            </excludeBugsFile>
                        </configuration>
                        <executions>
                            <execution>
                                <id>analyze-compile</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                            <execution>
                                <phase>process-classes</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs-maven-plugin</artifactId>
                        <version>${maven-spotbugs-plugin.version}</version>
                        <dependencies>
                            <!-- overwrite dependency on spotbugs if you want to specify the version of˓→spotbugs -->
                            <dependency>
                                <groupId>com.github.spotbugs</groupId>
                                <artifactId>spotbugs</artifactId>
                                <version>${spotbugs.version}</version>
                            </dependency>
                        </dependencies>
                        <configuration>
                            <effort>Max</effort>
                            <!-- Reports all bugs (other values are medium and max) -->
                            <threshold>Low</threshold>
                            <!-- Produces XML report -->
                            <xmlOutput>true</xmlOutput>
                            <!-- Configures the directory in which the XML report is created -->
                            <spotbugsXmlOutputDirectory>${project.build.directory}/spotbugs</spotbugsXmlOutputDirectory>
                            <!-- Configures the file for excluding warnings -->
                            <excludeFilterFile>${project.basedir}/../.spotbugs/spotbugs-exclude.xml</excludeFilterFile>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>com.qulice</groupId>
                        <artifactId>qulice-maven-plugin</artifactId>
                        <version>${maven-qulice-plugin.version}</version>
                        <configuration>
                            <excludes combine.children="append">
                                <exclude>findbugs:.*</exclude>
                            </excludes>
                            <license>file:${basedir}/LICENSE.txt</license>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Check Style check profile -->
        <profile>
            <id>code-style-check</id>
            <properties>
                <checkstyle.version>8.38</checkstyle.version>
                <checkstyle.consoleOutput>false</checkstyle.consoleOutput>
                <checkstyle.enableSummary>false</checkstyle.enableSummary>
                <checkstyle.failOnError>false</checkstyle.failOnError>
                <checkstyle.failOnViolation>false</checkstyle.failOnViolation>
                <checkstyle.includeResources>false</checkstyle.includeResources>
                <checkstyle.includeTestSourceDirectory>false</checkstyle.includeTestSourceDirectory>
                <checkstyle.linkXRef>false</checkstyle.linkXRef>
                <checkstyle.logToConsole>false</checkstyle.logToConsole>
                <checkstyle.violationSeverity>warning</checkstyle.violationSeverity>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                        <version>${maven-checkstyle-plugin.version}</version>
                        <configuration>
                            <failsOnError>${checkstyle.failOnError}</failsOnError>
                            <failOnViolation>${checkstyle.failOnViolation}</failOnViolation>
                            <enableRulesSummary>${checkstyle.enableSummary}</enableRulesSummary>
                            <includeResources>${checkstyle.includeResources}</includeResources>
                            <includeTestSourceDirectory>
                                ${checkstyle.includeTestSourceDirectory}
                            </includeTestSourceDirectory>
                            <inputEncoding>${project.build.sourceEncoding}</inputEncoding>
                            <outputEncoding>${project.reporting.outputEncoding}</outputEncoding>
                            <logViolationsToConsole>${checkstyle.logToConsole}</logViolationsToConsole>
                            <outputFile>${project.build.outputDirectory}/checkstyle-output.xml</outputFile>
                            <encoding>${project.build.sourceEncoding}</encoding>
                            <consoleOutput>${checkstyle.consoleOutput}</consoleOutput>
                            <violationSeverity>${checkstyle.violationSeverity}</violationSeverity>
                            <linkXRef>${checkstyle.linkXRef}</linkXRef>
                            <maxAllowedViolations>0</maxAllowedViolations>
                            <includeTestResources>false</includeTestResources>
                            <propertyExpansion>lineLength=${jacoco-rule.line.length}</propertyExpansion>
                            <sourceDirectories>
                                <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
                                <sourceDirectory>${project.build.testSourceDirectory}</sourceDirectory>
                            </sourceDirectories>
                            <sourceDirectories>
                                <directory>${sourceJavaDirectory}</directory>
                                <directory>${sourceKotlinDirectory}</directory>
                            </sourceDirectories>
                            <testSourceDirectories>
                                <directory>
                                    ${sourceJavaTestDirectory}
                                </directory>
                            </testSourceDirectories>
                            <headerLocation>
                                checkstyle/checkstyle-header.txt
                            </headerLocation>
                            <configLocation>
                                checkstyle/checkstyle.xml
                            </configLocation>
                            <suppressionsLocation>
                                checkstyle/checkstyle-exclude.xml
                            </suppressionsLocation>
                        </configuration>
                        <executions>
                            <execution>
                                <id>validate</id>
                                <phase>validate</phase>
                                <configuration combine.self="append">
                                    <consoleOutput>true</consoleOutput>
                                    <logViolationsToConsole>true</logViolationsToConsole>
                                </configuration>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>com.puppycrawl.tools</groupId>
                                <artifactId>checkstyle</artifactId>
                                <version>${checkstyle.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-pmd-plugin</artifactId>
                        <version>${maven-pmd-plugin.version}</version>
                        <configuration>
                            <format>html</format>
                            <analysisCache>true</analysisCache>
                            <linkXRef>false</linkXRef>
                            <includeTests>false</includeTests>
                            <sourceEncoding>${project.reporting.outputEncoding}</sourceEncoding>
                            <minimumTokens>100</minimumTokens>
                            <failOnViolation>false</failOnViolation>
                            <failurePriority>5</failurePriority>
                            <printFailingErrors>true</printFailingErrors>
                            <rulesets>
                                <ruleset>checkstyle/rules.xml</ruleset>
                            </rulesets>
                        </configuration>
                        <executions>
                            <execution>
                                <id>check</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <configuration>
                                    <excludeFromFailureFile>
                                        checkstyle/exclude-pmd.properties
                                    </excludeFromFailureFile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Assembly profile -->
        <profile>
            <id>assembly</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>${maven-assembly-plugin.version}</version>
                        <inherited>true</inherited>
                        <configuration>
                            <skipAssembly>${assembly.skip}</skipAssembly>
                            <appendAssemblyId>true</appendAssemblyId>
                            <tarLongFileMode>posix</tarLongFileMode>
                            <finalName>${project.groupId}-${project.artifactId}-${project.version}</finalName>
                            <descriptorSourceDirectory>assembly</descriptorSourceDirectory>
                            <descriptors>
                                <descriptor>${session.executionRootDirectory}/assembly/package.xml</descriptor>
                            </descriptors>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                            </descriptorRefs>
                            <archiverConfig>
                                <duplicateBehavior>skip</duplicateBehavior>
                            </archiverConfig>
                        </configuration>
                        <executions>
                            <execution>
                                <id>single</id>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Javadoc profile -->
        <profile>
            <id>javadoc</id>
            <properties>
                <javadoc.properties>
                    -Xdoclint:none
                    -J-Xmx1024m
                    -notimestamp
                    -link http://docs.oracle.com/javase/8/docs/api/
                </javadoc.properties>
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-javadoc-plugin</artifactId>
                            <version>${maven-javadoc-plugin.version}</version>
                            <configuration>
                                <show>public</show>
                                <nohelp>true</nohelp>
                                <maxmemory>1024</maxmemory>
                                <notree>true</notree>
                                <header>${project.name}, ${project.version}</header>
                                <footer>${project.description}, ${project.version}</footer>
                                <encoding>${project.build.sourceEncoding}</encoding>
                                <charset>${project.build.outputEncoding}</charset>
                                <windowtitle>${project.name} v${project.version} API Documentation</windowtitle>
                                <doctitle>${project.name} v${project.version} API Documentation</doctitle>
                                <detectJavaApiLink>false</detectJavaApiLink>
                                <additionalJOptions>
                                    <additionalJOption>-Xdoclint:all</additionalJOption>
                                    <additionalJOption>-Xdoclint:-missing</additionalJOption>
                                    <additionalJOption>--allow-script-in-comments</additionalJOption>
                                    <additionalJOption>
                                        -J--add-exports=jdk.javadoc/jdk.javadoc.internal.tool=ALL-UNNAMED
                                    </additionalJOption>
                                </additionalJOptions>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>attach-javadoc</id>
                                    <goals>
                                        <goal>jar</goal>
                                    </goals>
                                    <phase>prepare-package</phase>
                                    <configuration>
                                        <includeDependencySources>true</includeDependencySources>
                                        <dependencySourceIncludes>
                                            <dependencySourceInclude>${project.groupId}:*</dependencySourceInclude>
                                        </dependencySourceIncludes>
                                        <attach>false</attach>
                                        <quiet>true</quiet>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>

                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Reporting profile -->
        <profile>
            <id>reporting</id>
            <reporting>
                <outputDirectory>${project.build.directory}/reporting</outputDirectory>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-changelog-plugin</artifactId>
                        <version>${maven-changelog-plugin.version}</version>
                        <configuration>
                            <type>tag</type>
                            <tags>
                                <tag implementation="java.lang.String">3.11.3</tag>
                                <tag implementation="java.lang.String">3.11.4</tag>
                            </tags>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-changes-plugin</artifactId>
                        <version>${maven-changes-plugin.version}</version>
                        <reportSets>
                            <reportSet>
                                <reports>
                                    <report>changes-report</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-plugin-plugin</artifactId>
                        <version>${maven-plugin-plugin.version}</version>
                        <configuration>
                            <skipErrorNoDescriptorsFound>true</skipErrorNoDescriptorsFound>
                        </configuration>
                        <reportSets>
                            <reportSet>
                                <reports>
                                    <report>report</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-project-info-reports-plugin</artifactId>
                        <version>${maven-project-info-reports-plugin.version}</version>
                        <configuration>
                            <dependencyDetailsEnabled>false</dependencyDetailsEnabled>
                        </configuration>
                        <reportSets>
                            <reportSet>
                                <reports>
                                    <report>index</report>
                                    <report>modules</report>
                                    <report>dependencies</report>
                                    <report>dependency-info</report>
                                    <report>mailing-lists</report>
                                    <report>dependency-convergence</report>
                                    <report>distribution-management</report>
                                    <report>dependency-management</report>
                                    <report>plugin-management</report>
                                    <report>issue-management</report>
                                    <report>ci-management</report>
                                    <report>licenses</report>
                                    <report>plugins</report>
                                    <report>summary</report>
                                    <report>team</report>
                                    <report>scm</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jxr-plugin</artifactId>
                        <version>${maven-jxr-plugin.version}</version>
                        <configuration>
                            <linkJavadoc>true</linkJavadoc>
                            <docTitle>${project.name} Source Xref (${project.version})</docTitle>
                            <windowTitle>${project.name} Source Xref (${project.version})</windowTitle>
                        </configuration>
                        <reportSets>
                            <reportSet>
                                <id>aggregate</id>
                                <reports>
                                    <report>aggregate</report>
                                    <report>test-aggregate</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>${maven-javadoc-plugin.version}</version>
                        <configuration>
                            <source>8</source>
                            <detectJavaApiLink>false</detectJavaApiLink>
                            <encoding>${project.build.sourceEncoding}</encoding>
                            <attach>true</attach>
                            <quiet>true</quiet>
                        </configuration>
                        <reportSets>
                            <reportSet>
                                <id>non-aggregate</id>
                                <reports>
                                    <report>javadoc</report>
                                    <report>test-javadoc</report>
                                </reports>
                            </reportSet>
                            <reportSet>
                                <id>aggregate</id>
                                <inherited>false</inherited>
                                <reports>
                                    <report>aggregate</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                </plugins>
            </reporting>
        </profile>

        <!-- JDK 8 and minor versions profile -->
        <profile>
            <id>non_module_java</id>
            <activation>
                <jdk>(,9)</jdk>
            </activation>
            <properties>
                <java.version>8</java.version>
                <asm.version>9.0</asm.version>
                <!--<plexus-compiler-errorprone.version>2.8.8</plexus-compiler-errorprone.version>-->
                <!--<errorprone.version>2.4.0</errorprone.version>-->
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>${maven-compiler-plugin.version}</version>
                        <configuration>
                            <annotationProcessorPaths>
                                <path>
                                    <groupId>org.projectlombok</groupId>
                                    <artifactId>lombok</artifactId>
                                    <version>${lombok.version}</version>
                                </path>
                            </annotationProcessorPaths>

                            <compilerId>javac-with-errorprone</compilerId>
                            <executable>true</executable>
                            <showDeprecation>true</showDeprecation>
                            <debug>true</debug>
                            <debuglevel>lines,vars,source</debuglevel>
                            <optimize>false</optimize>
                            <verbose>false</verbose>

                            <source>${maven.compiler.source}</source>
                            <target>${maven.compiler.target}</target>
                            <encoding>${project.build.outputEncoding}</encoding>
                            <forceJavacCompilerUse>true</forceJavacCompilerUse>

                            <compilerArgs>
                                <arg>-XDignore.symbol.file</arg>
                                <arg>-Xlint:all</arg>
                            </compilerArgs>

                            <excludes>
                                <exclude>module-info.java</exclude>
                            </excludes>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>org.ow2.asm</groupId>
                                <artifactId>asm</artifactId>
                                <version>${asm.version}</version>
                            </dependency>
                            <!--<dependency>-->
                            <!--    <groupId>org.codehaus.plexus</groupId>-->
                            <!--    <artifactId>plexus-compiler-javac-errorprone</artifactId>-->
                            <!--    <version>${plexus-compiler-errorprone.version}</version>-->
                            <!--</dependency>-->
                            <!--<dependency>-->
                            <!--    <groupId>com.google.errorprone</groupId>-->
                            <!--    <artifactId>error_prone_core</artifactId>-->
                            <!--    <version>${errorprone.version}</version>-->
                            <!--</dependency>-->
                        </dependencies>
                        <executions>
                            <execution>
                                <id>default-compile</id>
                                <goals>
                                    <goal>compile</goal>
                                </goals>
                                <phase>compile</phase>
                            </execution>
                            <execution>
                                <id>default-testCompile</id>
                                <goals>
                                    <goal>testCompile</goal>
                                </goals>
                                <phase>test-compile</phase>
                                <configuration>
                                    <skip>${compile-tests.skip}</skip>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- JDK 11 and major versions profile -->
        <profile>
            <id>module_java</id>
            <activation>
                <jdk>[11,)</jdk>
            </activation>
            <properties>
                <java.version>11</java.version>
                <asm.version>9.0</asm.version>
            </properties>

            <modules>
                <module>modules/objectmappers-benchmarks</module>
                <module>modules/objectmappers-nomin</module>
            </modules>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>${maven-compiler-plugin.version}</version>
                        <configuration>
                            <annotationProcessorPaths>
                                <path>
                                    <groupId>org.projectlombok</groupId>
                                    <artifactId>lombok</artifactId>
                                    <version>${lombok.version}</version>
                                </path>
                            </annotationProcessorPaths>

                            <executable>true</executable>
                            <showDeprecation>true</showDeprecation>
                            <debug>true</debug>
                            <debuglevel>lines,vars,source</debuglevel>
                            <optimize>false</optimize>
                            <verbose>false</verbose>
                            <forceJavacCompilerUse>true</forceJavacCompilerUse>

                            <compilerVersion>${java.version}</compilerVersion>
                            <release>${java.version}</release>
                            <source>${maven.compiler.source}</source>
                            <target>${maven.compiler.target}</target>
                            <encoding>${project.build.outputEncoding}</encoding>
                            <meminitial>128m</meminitial>
                            <maxmem>512m</maxmem>

                            <compilerArgs>
                                <arg>
                                    --add-exports=org.junit.platform.commons/org.junit.platform.commons.util=io.nullables.api.playground.objectmappers.testflow
                                </arg>
                            </compilerArgs>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>org.ow2.asm</groupId>
                                <artifactId>asm</artifactId>
                                <version>${asm.version}</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>default-compile</id>
                                <goals>
                                    <goal>compile</goal>
                                </goals>
                                <phase>compile</phase>
                            </execution>
                            <execution>
                                <id>default-testCompile</id>
                                <goals>
                                    <goal>testCompile</goal>
                                </goals>
                                <phase>test-compile</phase>
                                <configuration>
                                    <skip>${compile-tests.skip}</skip>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.moditect</groupId>
                        <artifactId>moditect-maven-plugin</artifactId>
                        <version>${maven.moditect.plugin.version}</version>
                        <inherited>true</inherited>
                        <configuration>
                            <artifactId>${project.groupId}-${project.artifactId}</artifactId>
                            <overwriteExistingFiles>true</overwriteExistingFiles>
                        </configuration>
                        <executions>
                            <execution>
                                <id>add-module-infos</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>add-module-info</goal>
                                </goals>
                                <configuration>
                                    <jvmVersion>${java.version}</jvmVersion>
                                    <module>
                                        <moduleInfoFile>
                                            ${project.build.sourceDirectory}/module-info.java
                                        </moduleInfoFile>
                                    </module>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Tests with code coverage profile -->
        <profile>
            <id>test</id>
            <properties>
                <surefire.commands>
                    -Duser.language=en
                    -Duser.country=GB
                    --enable-preview
                </surefire.commands>
                <surefire.fileEncoding>
                    -Dfile.encoding=${project.build.sourceEncoding}
                </surefire.fileEncoding>
                <surefire.jmxEnabled>
                    -Dcom.sun.management.jmxremote=false
                </surefire.jmxEnabled>
                <surefire.memory>
                    -Xmx1024m
                    -Dsun.zip.disableMemoryMapping=true
                </surefire.memory>
                <surefire.stackVersion>
                    -Djava.net.preferIPv4Stack=true
                </surefire.stackVersion>
                <surefire.timezone>
                    -Duser.timezone=US/Eastern
                </surefire.timezone>

                <jaxb.version>2.2.11</jaxb.version>
                <javax-activation.version>1.1.1</javax-activation.version>

                <unit-tests.fail>${failIfNoTests}</unit-tests.fail>
                <unit-tests.skip>${skipTests}</unit-tests.skip>
            </properties>

            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-surefire-plugin</artifactId>
                            <version>${maven-surefire-plugin.version}</version>
                            <configuration>
                                <skipTests>${unit-tests.skip}</skipTests>
                                <failIfNoTests>${unit-tests.fail}</failIfNoTests>
                                <disableXmlReport>true</disableXmlReport>
                                <reportFormat>plain</reportFormat>
                                <testFailureIgnore>false</testFailureIgnore>
                                <trimStackTrace>false</trimStackTrace>
                                <useSystemClassLoader>false</useSystemClassLoader>
                                <printSummary>true</printSummary>
                                <useFile>false</useFile>
                                <redirectTestOutputToFile>true</redirectTestOutputToFile>
                                <rerunFailingTestsCount>5</rerunFailingTestsCount>
                                <includes>
                                    <include/>
                                </includes>
                                <argLine>
                                    @{surefireArgLine}
                                    ${surefire.memory}
                                    ${surefire.fileEncoding}
                                    ${surefire.jmxEnabled}
                                    ${surefire.stackVersion}
                                    ${surefire.timezone}
                                    ${surefire.commands}
                                    ${test.vmargs}
                                </argLine>
                                <environmentVariables>
                                    <testEnvironmentVariable>EnvironmentVariable</testEnvironmentVariable>
                                </environmentVariables>
                                <properties>
                                    <systemPropertyVariables>
                                        <buildDirectory>${project.build.directory}</buildDirectory>
                                        <project.version>${project.version}</project.version>
                                        <os.detected.name>${os.detected.name}</os.detected.name>
                                        <os.detected.arch>${os.detected.arch}</os.detected.arch>
                                        <java.awt.headless>true</java.awt.headless>
                                        <org.slf4j.simpleLogger.showDateTime>true</org.slf4j.simpleLogger.showDateTime>
                                        <reportDirectory>
                                            ${project.build.directory}/allure-report
                                        </reportDirectory>
                                        <allure.results.directory>
                                            ${project.build.directory}/allure-results
                                        </allure.results.directory>
                                    </systemPropertyVariables>
                                </properties>
                            </configuration>
                        </plugin>

                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-surefire-report-plugin</artifactId>
                            <version>${maven-surefire-report-plugin.version}</version>
                            <configuration>
                                <showSuccess>true</showSuccess>
                                <outputDirectory>${project.build.directory}/surefire-reports</outputDirectory>
                            </configuration>
                            <executions>
                                <execution>
                                    <phase>test</phase>
                                </execution>
                            </executions>
                        </plugin>

                        <plugin>
                            <groupId>org.pitest</groupId>
                            <artifactId>pitest-maven</artifactId>
                            <version>${maven-pitest-plugin.version}</version>
                            <configuration>
                                <skip>${unit-tests.skip}</skip>
                                <targetClasses>
                                    <param>io.nullables.api.playground.objectmappers.*</param>
                                </targetClasses>
                                <targetTests>
                                    <param>io.nullables.api.playground.objectmappers.*</param>
                                </targetTests>
                            </configuration>
                            <dependencies>
                                <dependency>
                                    <groupId>org.pitest</groupId>
                                    <artifactId>pitest-junit5-plugin</artifactId>
                                    <version>${maven-pitest-junit5-plugin.version}</version>
                                </dependency>
                            </dependencies>
                            <executions>
                                <execution>
                                    <id>pit-report</id>
                                    <phase>test</phase>
                                    <goals>
                                        <goal>mutationCoverage</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>

                        <plugin>
                            <groupId>org.jacoco</groupId>
                            <artifactId>jacoco-maven-plugin</artifactId>
                            <version>${maven-jacoco-plugin.version}</version>
                            <configuration>
                                <append>true</append>
                                <excludes>
                                    <exclude>${jacoco.coverage.exclusions}</exclude>
                                </excludes>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>before-tests</id>
                                    <goals>
                                        <goal>prepare-agent</goal>
                                    </goals>
                                    <phase>process-test-classes</phase>
                                    <configuration>
                                        <skip>${unit-tests.skip}</skip>
                                        <!-- Sets the path to the file which contains the execution data. -->
                                        <destFile>
                                            ${project.build.directory}/coverage-reports/jacoco-ut.exec
                                        </destFile>
                                        <!--
                                            Sets the name of the property containing the settings
                                            for JaCoCo runtime agent.
                                        -->
                                        <propertyName>surefireArgLine</propertyName>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>after-tests</id>
                                    <goals>
                                        <goal>report</goal>
                                    </goals>
                                    <phase>test</phase>
                                    <configuration>
                                        <skip>${unit-tests.skip}</skip>
                                        <!-- Sets the path to the file which contains the execution data. -->
                                        <dataFile>
                                            ${project.build.directory}/coverage-reports/jacoco-ut.exec
                                        </dataFile>
                                        <!-- Sets the output directory for the code coverage report. -->
                                        <outputDirectory>
                                            ${project.reporting.outputDirectory}/jacoco-ut
                                        </outputDirectory>
                                        <!-- Source files encoding -->
                                        <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
                                        <!-- Output files encoding -->
                                        <outputEncoding>${project.build.outputEncoding}</outputEncoding>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>default-jacoco-check</id>
                                    <goals>
                                        <goal>check</goal>
                                    </goals>
                                    <configuration>
                                        <skip>${jacoco-check.skip}</skip>
                                        <rules>
                                            <rule
                                                implementation="org.jacoco.maven.RuleConfiguration">
                                                <element>BUNDLE</element>
                                                <limits>
                                                    <limit
                                                        implementation="org.jacoco.report.check.Limit">
                                                        <counter>INSTRUCTION</counter>
                                                        <value>COVEREDRATIO</value>
                                                        <minimum>
                                                            ${jacoco.instructions.coverage.percentage.minimum}
                                                        </minimum>
                                                    </limit>
                                                    <limit
                                                        implementation="org.jacoco.report.check.Limit">
                                                        <counter>CLASS</counter>
                                                        <value>MISSEDCOUNT</value>
                                                        <maximum>
                                                            ${jacoco.classes.missed.minimum}
                                                        </maximum>
                                                    </limit>
                                                    <limit
                                                        implementation="org.jacoco.report.check.Limit">
                                                        <counter>LINE</counter>
                                                        <value>COVEREDRATIO</value>
                                                        <minimum>
                                                            ${jacoco.lines.coverage.percentage.minimum}
                                                        </minimum>
                                                    </limit>
                                                    <limit
                                                        implementation="org.jacoco.report.check.Limit">
                                                        <counter>BRANCH</counter>
                                                        <value>COVEREDRATIO</value>
                                                        <minimum>
                                                            ${jacoco.branches.coverage.percentage.minimum}
                                                        </minimum>
                                                    </limit>
                                                    <limit
                                                        implementation="org.jacoco.report.check.Limit">
                                                        <counter>COMPLEXITY</counter>
                                                        <value>COVEREDRATIO</value>
                                                        <minimum>
                                                            ${jacoco.complexities.coverage.percentage.minimum}
                                                        </minimum>
                                                    </limit>
                                                    <limit
                                                        implementation="org.jacoco.report.check.Limit">
                                                        <counter>METHOD</counter>
                                                        <value>COVEREDRATIO</value>
                                                        <minimum>
                                                            ${jacoco.methods.coverage.percentage.minimum}
                                                        </minimum>
                                                    </limit>
                                                </limits>
                                            </rule>
                                        </rules>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>

                        <plugin>
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>cobertura-maven-plugin</artifactId>
                            <version>${maven-cobertura-plugin.version}</version>
                            <configuration>
                                <check>true</check>
                                <formats>
                                    <format>xml</format>
                                </formats>
                                <maxmem>256m</maxmem>
                                <aggregate>true</aggregate>
                            </configuration>
                        </plugin>

                        <plugin>
                            <groupId>org.eluder.coveralls</groupId>
                            <artifactId>coveralls-maven-plugin</artifactId>
                            <version>${maven-coveralls-plugin.version}</version>
                            <configuration>
                                <jacocoReports>
                                    <jacocoReport>
                                        modules/objectmappers-beancp/.build/bin/io.nullables.api.playground.objectmappers.beancp/reporting/jacoco-ut/jacoco.xml
                                    </jacocoReport>
                                    <jacocoReport>
                                        modules/objectmappers-beanmapper/.build/bin/io.nullables.api.playground.objectmappers.beanmapper/reporting/jacoco-ut/jacoco.xml
                                    </jacocoReport>
                                    <jacocoReport>
                                        modules/objectmappers-beanutils/.build/bin/io.nullables.api.playground.objectmappers.beanutils/reporting/jacoco-ut/jacoco.xml
                                    </jacocoReport>
                                    <jacocoReport>
                                        modules/objectmappers-benchmarks/.build/bin/io.nullables.api.playground.objectmappers.benchmarks/reporting/jacoco-ut/jacoco.xml
                                    </jacocoReport>
                                    <jacocoReport>
                                        modules/objectmappers-bull/.build/bin/io.nullables.api.playground.objectmappers.bull/reporting/jacoco-ut/jacoco.xml
                                    </jacocoReport>
                                    <jacocoReport>
                                        modules/objectmappers-datus/.build/bin/io.nullables.api.playground.objectmappers.datus/reporting/jacoco-ut/jacoco.xml
                                    </jacocoReport>
                                    <jacocoReport>
                                        modules/objectmappers-dozer/.build/bin/io.nullables.api.playground.objectmappers.dozer/reporting/jacoco-ut/jacoco.xml
                                    </jacocoReport>
                                    <jacocoReport>
                                        modules/objectmappers-jmapper/.build/bin/io.nullables.api.playground.objectmappers.jmapper/reporting/jacoco-ut/jacoco.xml
                                    </jacocoReport>
                                    <jacocoReport>
                                        modules/objectmappers-mapstruct/.build/bin/io.nullables.api.playground.objectmappers.mapstruct/reporting/jacoco-ut/jacoco.xml
                                    </jacocoReport>
                                    <jacocoReport>
                                        modules/objectmappers-modelmapper/.build/bin/io.nullables.api.playground.objectmappers.modelmapper/reporting/jacoco-ut/jacoco.xml
                                    </jacocoReport>
                                    <jacocoReport>
                                        modules/objectmappers-moo/.build/bin/io.nullables.api.playground.objectmappers.moo/reporting/jacoco-ut/jacoco.xml
                                    </jacocoReport>
                                    <jacocoReport>
                                        modules/objectmappers-nomin/.build/bin/io.nullables.api.playground.objectmappers.nomin/reporting/jacoco-ut/jacoco.xml
                                    </jacocoReport>
                                    <jacocoReport>
                                        modules/objectmappers-orika/.build/bin/io.nullables.api.playground.objectmappers.orika/reporting/jacoco-ut/jacoco.xml
                                    </jacocoReport>
                                    <jacocoReport>
                                        modules/objectmappers-remap/.build/bin/io.nullables.api.playground.objectmappers.remap/reporting/jacoco-ut/jacoco.xml
                                    </jacocoReport>
                                    <jacocoReport>
                                        modules/objectmappers-selma/.build/bin/io.nullables.api.playground.objectmappers.selma/reporting/jacoco-ut/jacoco.xml
                                    </jacocoReport>
                                    <jacocoReport>
                                        modules/objectmappers-smooks/.build/bin/io.nullables.api.playground.objectmappers.smooks/reporting/jacoco-ut/jacoco.xml
                                    </jacocoReport>
                                </jacocoReports>
                                <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
                                <timestampFormat>${maven.build.timestamp.format}</timestampFormat>
                            </configuration>
                            <dependencies>
                                <dependency>
                                    <groupId>javax.xml.bind</groupId>
                                    <artifactId>jaxb-api</artifactId>
                                    <version>${jaxb.version}</version>
                                </dependency>
                                <dependency>
                                    <groupId>com.sun.xml.bind</groupId>
                                    <artifactId>jaxb-core</artifactId>
                                    <version>${jaxb.version}</version>
                                </dependency>
                                <dependency>
                                    <groupId>com.sun.xml.bind</groupId>
                                    <artifactId>jaxb-impl</artifactId>
                                    <version>${jaxb.version}</version>
                                </dependency>
                                <dependency>
                                    <groupId>javax.activation</groupId>
                                    <artifactId>activation</artifactId>
                                    <version>${javax-activation.version}</version>
                                </dependency>
                            </dependencies>
                        </plugin>
                    </plugins>
                </pluginManagement>

                <!-- Use in lifecycle -->
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>cobertura-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.eluder.coveralls</groupId>
                        <artifactId>coveralls-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-report-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.pitest</groupId>
                        <artifactId>pitest-maven</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- BTrace profile -->
        <profile>
            <id>btrace</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>io.btrace</groupId>
                            <artifactId>btrace-maven-plugin</artifactId>
                            <version>${maven-btrace-plugin.version}</version>
                            <executions>
                                <execution>
                                    <goals>
                                        <goal>btracec</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>

        <!-- Source profile -->
        <profile>
            <id>revapi</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.revapi</groupId>
                            <artifactId>revapi-maven-plugin</artifactId>
                            <version>${maven-revapi-plugin.version}</version>
                            <dependencies>
                                <dependency>
                                    <groupId>org.revapi</groupId>
                                    <artifactId>revapi-java</artifactId>
                                    <version>0.24.4</version>
                                </dependency>
                            </dependencies>
                            <configuration>
                                <analysisConfiguration>
                                    <revapi.differences id="intentional-api-changes">
                                        <ignore>true</ignore>
                                    </revapi.differences>
                                </analysisConfiguration>
                            </configuration>
                            <executions>
                                <execution>
                                    <goals>
                                        <goal>check</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>

                <plugins>
                    <plugin>
                        <groupId>org.revapi</groupId>
                        <artifactId>revapi-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- MacOsX profile -->
        <profile>
            <id>toolchain</id>
            <properties>
                <toolchain.vendor>openjdk</toolchain.vendor>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-toolchains-plugin</artifactId>
                        <version>${maven-toolchain-plugin.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>toolchain</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <toolchains>
                                <jdk>
                                    <version>${java.version}</version>
                                    <vendor>${toolchain.vendor}</vendor>
                                </jdk>
                            </toolchains>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- MacOsX profile -->
        <profile>
            <id>macosx</id>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
            <properties>
                <test.vmargs>-Xmx512m -XX:MaxPermSize=256m -XstartOnFirstThread</test.vmargs>
            </properties>
        </profile>

        <!-- Non-MacOsX profile -->
        <profile>
            <id>non-macosx</id>
            <activation>
                <os>
                    <family>!mac</family>
                </os>
            </activation>
            <properties>
                <test.vmargs>-Xmx512m -XX:MaxPermSize=256m</test.vmargs>
            </properties>
        </profile>

        <!-- Source profile -->
        <profile>
            <id>generate-sources</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-source-plugin</artifactId>
                            <version>${maven-source-plugin.version}</version>
                            <inherited>true</inherited>
                            <configuration>
                                <excludeResources>true</excludeResources>
                                <useDefaultExcludes>true</useDefaultExcludes>
                                <classifier>sources</classifier>
                                <archive>
                                    <manifest>
                                        <packageName>${project.groupId}</packageName>
                                        <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                                        <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                    </manifest>
                                    <manifestEntries>
                                        <Specification-Version>${project.version}</Specification-Version>
                                        <Bundle-ManifestVersion>2</Bundle-ManifestVersion>
                                        <Bundle-Name>${project.name} Sources</Bundle-Name>
                                        <Bundle-SymbolicName>${project.artifactId}.sources</Bundle-SymbolicName>
                                        <Bundle-Vendor>${project.organization.name} Sources</Bundle-Vendor>
                                        <Bundle-License>LGPL-3-Clause</Bundle-License>
                                        <Eclipse-SourceBundle>${project.artifactId};version=${project.version}
                                        </Eclipse-SourceBundle>
                                        <X-Compile-Source>${maven.compiler.source}</X-Compile-Source>
                                        <X-Compile-Target>${maven.compiler.target}</X-Compile-Target>
                                        <X-Builder>Maven ${maven.version}</X-Builder>
                                        <X-Build-Time>${maven.build.timestamp}</X-Build-Time>
                                        <X-Build-Os>${os.name}</X-Build-Os>
                                    </manifestEntries>
                                </archive>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>create-source-jar</id>
                                    <goals>
                                        <goal>jar-no-fork</goal>
                                        <goal>test-jar-no-fork</goal>
                                    </goals>
                                </execution>
                                <execution>
                                    <id>attach-source</id>
                                    <goals>
                                        <goal>jar-no-fork</goal>
                                    </goals>
                                    <phase>package</phase>
                                </execution>
                                <execution>
                                    <id>attach-sources-no-fork</id>
                                    <inherited>true</inherited>
                                    <goals>
                                        <goal>jar-no-fork</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>

                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Generate build properties profile -->
        <profile>
            <id>generate-build-properties</id>
            <activation>
                <file>
                    <exists>${basedir}/src</exists>
                </file>
            </activation>
            <properties>
                <commons-net.version>3.7.2</commons-net.version>
                <ant-commons-net.version>1.10.9</ant-commons-net.version>
                <ant-nodeps.version>1.8.1</ant-nodeps.version>
                <ant-contrib.version>20020829</ant-contrib.version>
                <antelopetasks.version>3.2.10</antelopetasks.version>
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-antrun-plugin</artifactId>
                            <version>${maven-antrun-plugin.version}</version>
                            <dependencies>
                                <dependency>
                                    <groupId>commons-net</groupId>
                                    <artifactId>commons-net</artifactId>
                                    <version>${commons-net.version}</version>
                                </dependency>
                                <dependency>
                                    <groupId>org.apache.ant</groupId>
                                    <artifactId>ant-commons-net</artifactId>
                                    <version>${ant-commons-net.version}</version>
                                </dependency>
                                <dependency>
                                    <groupId>org.apache.ant</groupId>
                                    <artifactId>ant-nodeps</artifactId>
                                    <version>${ant-nodeps.version}</version>
                                </dependency>
                                <dependency>
                                    <groupId>ant-contrib</groupId>
                                    <artifactId>ant-contrib</artifactId>
                                    <version>${ant-contrib.version}</version>
                                    <exclusions>
                                        <exclusion>
                                            <groupId>ant</groupId>
                                            <artifactId>ant</artifactId>
                                        </exclusion>
                                    </exclusions>
                                </dependency>
                                <dependency>
                                    <groupId>org.tigris.antelope</groupId>
                                    <artifactId>antelopetasks</artifactId>
                                    <version>${antelopetasks.version}</version>
                                </dependency>
                            </dependencies>
                            <executions>
                                <execution>
                                    <id>setup-maven-properties</id>
                                    <phase>validate</phase>
                                    <goals>
                                        <goal>run</goal>
                                    </goals>
                                    <configuration>
                                        <exportAntProperties>true</exportAntProperties>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>generate-build-properties</id>
                                    <goals>
                                        <goal>run</goal>
                                    </goals>
                                    <phase>generate-resources</phase>
                                    <configuration>
                                        <target>
                                            <mkdir dir="${project.build.directory}/classes/"/>
                                            <propertyfile file="${project.build.directory}/classes/build.properties">
                                                <entry key="pom.name" value="${project.name}"/>
                                                <entry key="pom.groupId" value="${project.groupId}"/>
                                                <entry key="pom.artifactId" value="${project.artifactId}"/>
                                                <entry key="pom.version" value="${project.version}"/>
                                                <entry key="pom.packaging" value="${project.packaging}"/>
                                                <entry key="git.branch" value="${git.branch}"/>
                                                <entry key="git.commit.tags" value="${git.tags}"/>
                                                <entry key="git.commit.id" value="${git.commit.id}"/>
                                                <entry key="git.commit.id.describe" value="${git.commit.id.describe}"/>
                                                <entry key="git.commit.id.abbrev" value="${git.commit.id.abbrev}"/>
                                                <entry key="git.commit.user.name" value="${git.commit.user.name}"/>
                                                <entry key="git.commit.user.email" value="${git.commit.user.email}"/>
                                                <entry key="git.commit.message.full"
                                                       value="${git.commit.message.full}"/>
                                                <entry key="git.commit.message.short"
                                                       value="${git.commit.message.short}"/>
                                                <entry key="git.commit.time" value="${git.commit.time}"/>
                                            </propertyfile>
                                        </target>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>

                        <plugin>
                            <groupId>pl.project13.maven</groupId>
                            <artifactId>git-commit-id-plugin</artifactId>
                            <version>${maven-git-commit-id-plugin.version}</version>
                            <configuration>
                                <dateFormat>yyyyMMdd-HHmmss</dateFormat>
                                <!--
                                    If you'd like to tell the plugin where your .git directory is,
                                    use this setting, otherwise we'll perform a search trying to
                                    figure out the right directory. It's better to add it explicitly IMHO.
                                -->
                                <injectAllReactorProjects>false</injectAllReactorProjects>
                                <!-- ALTERNATE SETUP - GENERATE FILE -->
                                <!--
                                    If you want to keep git information, even in your WAR file etc,
                                    use this mode, which will generate a properties file (with filled out values)
                                    which you can then normally read using new Properties().load(/**/)
                                -->

                                <!-- true by default, controls whether the plugin will fail when no .git directory is found, when set to false the plugin will just skip execution -->
                                <failOnNoGitDirectory>true</failOnNoGitDirectory>
                                <!-- true by default, controls whether the plugin will fail if it was unable to obtain enough data for a complete run, if you don't care about this, you may want to set this value to false. -->
                                <failOnUnableToExtractRepoInfo>true</failOnUnableToExtractRepoInfo>
                                <!--
                                    skip the plugin execution completely. This is useful for e.g. profile activated plugin invocations or
                                    to use properties to enable / disable pom features. Default value is 'false'.
                                -->
                                <!--
                                                    <skip>false</skip>
                                -->
                                <!--
                                     The option can be used to tell the plugin how it should generate the 'git.commit.id' property. Due to some naming issues when exporting the properties as an json-object (https://github.com/ktoso/maven-git-commit-id-plugin/issues/122) we needed to make it possible to export all properties as a valid json-object.
                                     Due to the fact that this is one of the major properties the plugin is exporting we just don't want to change the exporting mechanism and somehow throw the backwards compatibility away.
                                     We rather provide a convenient switch where you can choose if you would like the properties as they always had been, or if you rather need to support full json-object compatibility.
                                     In the case you need to fully support json-object we unfortunately need to change the 'git.commit.id' property from 'git.commit.id' to 'git.commit.id.full' in the exporting mechanism to allow the generation of a fully valid json object.
                                     Currently the switch allows two different options:
                                     1. By default this property is set to 'flat' and will generate the formerly known property 'git.commit.id' as it was in the previous versions of the plugin. Keeping it to 'flat' by default preserve backwards compatibility and does not require further adjustments by the end user.
                                     2. If you set this switch to 'full' the plugin will export the formerly known property 'git.commit.id' as 'git.commit.id.full' and therefore will generate a fully valid json object in the exporting mechanism.
                                     *Note*: Depending on your plugin configuration you obviously can choose the 'prefix' of your properties by setting it accordingly in the plugin's configuration. As a result this is therefore only an illustration what the switch means when the 'prefix' is set to it's default value.
                                     *Note*: If you set the value to something that's not equal to 'flat' or 'full' (ignoring the case) the plugin will output a warning and will fallback to the default 'flat' mode.
                                -->
                                <commitIdGenerationMode>flat</commitIdGenerationMode>
                                <excludeProperties>
                                    <excludeProperty>git.user.*</excludeProperty>
                                    <excludeProperty>git.closest.tag.commit.count</excludeProperty>
                                    <excludeProperty>git.closest.tag.name</excludeProperty>
                                </excludeProperties>
                                <!--
                                    read up about git-describe on the in man, or it's homepage - it's a really powerful versioning helper
                                    and the recommended way to use git-commit-id-plugin. The configuration bellow is optional,
                                    by default describe will run "just like git-describe on the command line", even though it's a JGit reimplementation.
                                -->
                                <gitDescribe>
                                    <!--
                                                            &lt;!&ndash; don't generate the describe property &ndash;&gt;
                                                            <skip>false</skip>
                                    -->
                                    <!--
                                        if no tag was found "near" this commit, just print the commit's id instead,
                                        helpful when you always expect this field to be not-empty
                                    -->
                                    <always>true</always>
                                    <!--
                                         how many chars should be displayed as the commit object id?
                                         7 is git's default,
                                         0 has a special meaning (see end of this README.md),
                                         and 40 is the maximum value here
                                    -->
                                    <abbrev>7</abbrev>
                                    <!-- when the build is triggered while the repo is in "dirty state", append this suffix -->
                                    <dirty>-dirty</dirty>

                                    <!-- Only consider tags matching the given pattern. This can be used to avoid leaking private tags from the repository. -->
                                    <match>*</match>
                                    <!--
                                        when you run git-describe it only looks only for *annotated tags* by default
                                        if you wish to consider *lightweight tags* in your describe as well you would need to switch this to *true*
                                        The difference between *annotated tags* and *lightweight tags* is outlined in more depth here:
                                        https://github.com/ktoso/maven-git-commit-id-plugin/#git-describe-and-a-small-gotcha-with-tags
                                    -->
                                    <tags>false</tags>
                                    <!--
                                         always print using the "tag-commits_from_tag-g_commit_id-maybe_dirty" format, even if "on" a tag.
                                         The distance will always be 0 if you're "on" the tag.
                                    -->
                                    <forceLongFormat>false</forceLongFormat>
                                </gitDescribe>
                                <verbose>false</verbose>
                                <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                                <generateGitPropertiesFile>true</generateGitPropertiesFile>
                                <generateGitPropertiesFilename>
                                    ${project.build.directory}/generated-sources/versions/version.properties
                                </generateGitPropertiesFilename>
                                <skipPoms>false</skipPoms>
                                <runOnlyOnce>true</runOnlyOnce>
                                <failOnNoGitDirectory>false</failOnNoGitDirectory>
                                <prefix>git</prefix>
                                <useNativeGit>false</useNativeGit>
                                <dateFormat>${maven.build.timestamp.format}</dateFormat>
                                <includeOnlyProperties>
                                    <includeOnlyProperty>^git.commit.id.abbrev$</includeOnlyProperty>
                                    <includeOnlyProperty>^git.commit.id.describe$</includeOnlyProperty>
                                    <includeOnlyProperty>^git.branch$</includeOnlyProperty>
                                </includeOnlyProperties>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>set-git-properties</id>
                                    <goals>
                                        <goal>revision</goal>
                                    </goals>
                                    <phase>initialize</phase>
                                </execution>
                                <execution>
                                    <id>validate-the-git-infos</id>
                                    <goals>
                                        <goal>validateRevision</goal>
                                    </goals>
                                    <phase>package</phase>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>

                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>pl.project13.maven</groupId>
                        <artifactId>git-commit-id-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Sonar profile -->
        <profile>
            <id>sonar</id>
            <properties>
                <sonar.host.url>http://localhost:9000</sonar.host.url>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.sonarsource.sonar-packaging-maven-plugin</groupId>
                        <artifactId>sonar-packaging-maven-plugin</artifactId>
                        <version>${maven-sonar-packaging-plugin.version}</version>
                        <extensions>true</extensions>
                        <configuration>
                            <pluginDescription>For test purposes</pluginDescription>
                            <sonarLintSupported>true</sonarLintSupported>
                            <sonarQubeMinVersion>6.0</sonarQubeMinVersion>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>org.sonarsource.scanner.maven</groupId>
                        <artifactId>sonar-maven-plugin</artifactId>
                        <version>${maven-sonar-plugin.version}</version>
                        <configuration>
                            <detail>true</detail>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Compile with debug profile -->
        <profile>
            <id>compile-with-debug</id>
            <properties>
                <maven.compiler.debug>true</maven.compiler.debug>
                <maven.compiler.debuglevel>lines,vars,source</maven.compiler.debuglevel>
                <maven.compiler.verbose>true</maven.compiler.verbose>
            </properties>
        </profile>

        <!-- Test-jar profile -->
        <profile>
            <id>test-jar</id>
            <properties>
                <package-tests.skip>false</package-tests.skip>
            </properties>
        </profile>

        <!-- Dev profile -->
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <enforce.java.skip>true</enforce.java.skip>
                <enforce.banned.skip>true</enforce.banned.skip>
                <enforce.maven.skip>true</enforce.maven.skip>
                <enforce.snapshots.skip>true</enforce.snapshots.skip>
                <enforce.plugin.skip>true</enforce.plugin.skip>
                <enforce.deps.skip>true</enforce.deps.skip>
                <enforce.repository.skip>true</enforce.repository.skip>
                <enforce.vars.skip>true</enforce.vars.skip>
                <enforce.pom-enforcers.skip>true</enforce.pom-enforcers.skip>
                <enforce.jkd8.skip>true</enforce.jkd8.skip>
                <enforce.duplicate.skip>true</enforce.duplicate.skip>
                <enforce.test.skip>true</enforce.test.skip>

                <copy-dependencies.skip>true</copy-dependencies.skip>
                <assembly.skip>true</assembly.skip>
                <logback.loglevel>DEBUG</logback.loglevel>
            </properties>
        </profile>

        <!-- Full profile-->
        <profile>
            <id>full-profile</id>
            <activation>
                <property>
                    <name>full</name>
                </property>
            </activation>
            <modules>
                <module>modules/objectmappers-all</module>
            </modules>
        </profile>

        <!-- Non-Mac profile-->
        <profile>
            <id>nonmac-profile</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <file>
                    <exists>${java.home}/lib/tools.jar</exists>
                </file>
            </activation>
            <properties>
                <toolsjar>${java.home}/lib/tools.jar</toolsjar>
            </properties>
        </profile>

        <!-- Mac profile-->
        <profile>
            <id>mac-profile</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <file>
                    <exists>${java.home}/../Classes/classes.jar</exists>
                </file>
            </activation>
            <properties>
                <toolsjar>${java.home}/../Classes/classes.jar</toolsjar>
            </properties>
        </profile>

        <!-- Java tools profile-->
        <profile>
            <id>jdk9</id>
            <activation>
                <jdk>[1,1.9)</jdk>
            </activation>
            <properties>
                <java-tools.version>8</java-tools.version>
                <java-tools.path>${java.home}/../lib/tools.jar</java-tools.path>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>com.sun</groupId>
                    <artifactId>tools</artifactId>
                    <version>${java-tools.version}</version>
                    <scope>system</scope>
                    <systemPath>${java-tools.path}</systemPath>
                </dependency>
            </dependencies>
        </profile>
    </profiles>
</project>
